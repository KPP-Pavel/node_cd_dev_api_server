{"version":3,"sources":["logo.svg","redux/reducers/reducer_ListTask.js","components/navTask/navTask.js","components/form/updateTask/updateTask.js","components/form/updateTask/containerUpdateTask.js","components/form/addTask/addTask.js","components/form/addTask/containerAddTask.js","components/listTasks/listTasks.js","components/tasksAlert/tasksAlert.js","components/tasksAlert/containerAlerts.js","components/listTasks/containerListTasks.js","components/todoStart.js","components/addTaskDO/nav/navTask.js","components/addTaskDO/nav/navTaskContainer.js","components/addTaskDO/inputs/inputs.jsx","components/addTaskDO/step1/step1.js","dal/api.js","redux/reducers/reducer_taskDO.js","components/addTaskDO/step1/step1Container.js","components/addTaskDO/changs/selectContract.js","components/addTaskDO/changs/selectContractContainer.js","components/addTaskDO/changs/addClient.js","components/addTaskDO/changs/addClientContainer.js","components/addTaskDO/step2/step2.js","components/addTaskDO/step2/step2Container.js","components/addTaskDO/changs/addService.js","components/addTaskDO/changs/addServiceContainer.js","components/addTaskDO/step3/step3.js","components/addTaskDO/step3/step3Container.js","components/addTaskDO/step4/step4.js","components/addTaskDO/step4/step4Container.js","components/addTaskDO/step5/adminForm.jsx","components/addTaskDO/step5/step5.js","components/addTaskDO/step5/step5Container.js","components/addTaskDO/allSteps/allSteps.js","components/addTaskDO/listTask/listTask.js","components/addTaskDO/listTask/listTaskContainer.js","components/addTaskDO/listServicesByGid/listServicesByGid.jsx","components/addTaskDO/listServicesByGid/listServicesByGidContainer.js","components/addTaskDO/testForm/testForm.jsx","components/addTaskDO/testForm/testForm2.jsx","components/addTaskDO/addTaskDoStart.js","App.js","redux/reducers/reducer_directorys.js","redux/redux_store.js","index.js","components/addTaskDO/step3/step3.module.css"],"names":["ADDTASK","UPDATETASK","TEMPORARYTASK","CHANGESTATUS","UPDATELIST","SAVEITEM","myAxios","method","data","axios","url","initialState","temporaryTask","id","dateCreate","dateBegeen","dateEnd","executor_id","executor_name","task","result","tyteTask_id","tyteTask_name","dateComplete","textComplete","statusTask","listTaskReducer","state","action","type","taskIndex","newState","arrTasks","findIndex","item","find","updateTask","JSON","stringify","then","response","newData","parse","dispatch","cloneAddTask","Object","assign","m","now","Date","toLocaleString","month","d","day","y","year","length","addTask","idTask","name","saved","tmpState","UpdateListContainer","connect","mydispatch","e","props","className","role","aria-label","to","onClick","CheckRadio","checked","value","valArr","onChange","changeStatus","kay","data-id","data-statustask","UpdateTask","executors","dirExecutors","map","tyteTasks","dirTyteTasks","dataTask","callToUpdateTask","data-name","rows","saveItem","RouteUpdateTask","dataTasks","window","location","href","split","ContainerUpdateTask","directoryes","dir_executors","dir_tyteTasks","preventDefault","target","getAttribute","date","path","render","AddTask","onSubmit","addElem","callTmpElem","AddTaskContainer","TaskRow","color","idUser","myRef","simv","ListTasks","this","updateList","updateDirs","title","scope","React","Component","TasksAlert","toDay","arrToDay","forEach","difDate","push","borderColor","totalText","AlertsContainer","dateDiff","status","dateEqual","ContainerListTasks","TodoStart","src","logo","alt","exact","NavBar","Myerror","check","number","errors","allInputs","itemF","step","error","touched","keys","step1","step2","step3","step4","step5","match","params","idtask","navTaskContainer","compose","TaskDOForm","withRouter","NavTask","findRequired","arr","MyInput","input","meta","MyTextArea","MySelect","children","MySelectKPP","redStar","myError","validation","onBlur","myVal","temporaryTaskDO","size","onDoubleClick","MyInputKPP","placeholder","MyChekBoxKPP","valTrue","values","valfalse","data-bool","MyTextAreaKPP","addBtn","MyInputFileKPP","clearData","clearDataAC","multiple","newArr","i","selectedFilesSY","selectedFiles","Step1","touchedAC","validationRequired","toggleSelectContractForm","bind","changeData","getDepartments","getTypesContract","TypeService","urlIdTask","ID","getTask","datatoggle","toggleSelectContractFormAC","changeDataAC","typesContract","OneOrVileTasks","TypeDoc","typeContractsList","departmentsList","rulesStep1AC","clearRefSYAC","withCredentials","TOGGLEADDSERVICEFORM","TOGGLESELECTCONTRACTFORM","CHANGEDATA","RULESSTEP1AC","CLIENTLISTSELECTED","SETCLIENTS","GETTYPESCONTRACT","GETDEPARTMENTS","SETDATANULL","GETPERIODSACT","GETSERVICESLIST","ADDSERVICESLISTSELECTED","DELETESERVICESLISTSELECTEDAC","GETEOSZ","DEFAULTSUBJECT","TOGGLEADDCLIENTFORM","GETSY","CHECKERRORS","CLEARDATA","CLEARREFSY","CHANGEDATANEWCLIENT","SAVENEWCLIENT","CHANGEDATANEWSERVICE","SAVENEWSERVICE","PURENTDOCUMENT","SETCONTRACTS","GETLISTTASK","CHANGEDATAFILTER","SETTASK","SETCURRENTTEASK","SETSTATUSUSER","SETLISTSERVICESBYGID","TOUCHEDAC","SENDDATA","SETSTATUSTASK","RESETERRORS","checkErrorsAC","setDataNullAC","setCurrentTeask","getDepartmentsAC","sendDataAC","getListservicesByGid","gid","getContracts","GID","idTypeContract","gettypesContract","filter","markSetNull","getdepartments","objError","listUsersPP","statusUser","addClient","inn","contects","addService","department","groupService","manager","codeService","nameService","typeService","nomenclatureGroup","measurement","contracts","numberContract","dateContract","subject","listServicesByGid","idDocument","numDoc","statusDoc","filterListTask","dateTask","authorTask","datelastiteration","idpk","managerDO","typedoc","nameClient","subjectTask","comment","listTasks","clientsList","ClientListSelected","servicesList","servicesListSelected","EOSZList","periodsActList","templateFiles","toggleForms","addServiceForm","refSY","ref","totalError","IdAuthor","DateTask","TypeTask","NumberParentTask","num_doc_parent","TemplateDoc","Dep","MainCP","BranchCP","TypePerActService","PerActService","DateStart","DateEnd","DateText","Services","EOSZ","SubjectContract","ContactManagerGA","AdditionalConditional","ContactsCp","FileSU","FilePrice","FileEdit","FileApplication","FileUS","FileOther","CommentCD","signerClient","systemsClient","Active","PDNBool","boxServiceBool","coExecutorBool","RIDBool","startInPastBool","worcClientAreaBool","TransferAreaBool","TransferToolsBool","currentTeask","IDPK","aditionalFilesDO","TaskDOReducer","newObj","console","log","senddata","checkArr","newSubject","errMark","delid","splice","elem","addClientForm","selectContractForm","Step1Container","selectContractFormToggle","getuserdata","SelectContract","selectContract","setPurentDocumentAC","firstChild","trim","data-idparent","readOnly","SelectContractContainer","AddClientForm","component","saveNewClient","validate","initialValues","handleSubmit","form","submitting","pristine","download","AddClientContainer","jsonState","newClient","AddClient","Step2","filterClientGID","filterClientName","getClients","key","setSelectedClientDataAC","valClient","arrClients","addClientFormToggle","onKeyPress","data-idclient","toggleAddClientFormAC","Step2Container","AddServiceForm","saveNewService","disabled","newService","AddService","Step3","addServicesListSelected","deleteServicesListSelected","defaultSubject","filterServices","getServices","defaultSubjectAC","deleteServicesListSelectedAC","getPeriodsAct","getEOSZ","addServicesListSelectedAC","addServiceFormToggle","peridsAct","selectedServices","style","heightrow","toggleAddServiceFormAC","Step3Container","Step4","getSY","files","Step4Container","n","AdminForm","users","gotoWork","cancelTask","Step5","btnGroup","datdPropsChekBox","datdPropsTextArea","Step5Container","AllSteps","ListTask","ChangeDataFilter","ChangeDataFilterAC","getListTask","rowFilter","resetErrorsAC","ListTaskContainer","ListServicesByGid","sleep","ms","Promise","resolve","setTimeout","a","alert","App","rel","username","password","confirm","reset","AddTaskDoStart","getStatusUser","UPDATEDIRS","directoryesReducer","reducers","combineReducers","formReducer","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","StrictMode","getState","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.c524b9a9.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.add74742.svg\";","import * as axios from \"axios\"\r\n\r\nconst ADDTASK = 'AddTask';\r\nconst UPDATETASK = 'UdateTask';\r\nconst TEMPORARYTASK = 'temporaryTask';\r\nconst CHANGESTATUS = 'ChangeStatus';\r\nconst CHANGEIDTASK = 'changeIdTask';\r\nconst UPDATELIST = 'updateList';\r\nconst SAVEITEM = 'saveItem';\r\n\r\n\r\nexport function myAxios(method='get',data={}) {\r\n    return (\r\n        axios({\r\n            method: method,\r\n            url: 'http://localhost',\r\n            data: data\r\n        })\r\n    )\r\n}\r\n\r\nlet initialState = {\r\n    temporaryTask:\r\n    {\r\n        id: null,\r\n        dateCreate: '',\r\n        dateBegeen: '',\r\n        dateEnd: '',\r\n        executor_id: 0,\r\n        executor_name: '',\r\n        task: '',\r\n        result: '',\r\n        tyteTask_id: 0,\r\n        tyteTask_name: '',\r\n        dateComplete: '',\r\n        textComplete: '',\r\n        statusTask: ''\r\n    }\r\n};\r\nexport const saveItemAC = (data) => {\r\n    return {\r\n        type: SAVEITEM,\r\n        id: data.id\r\n    };\r\n}\r\nexport const updateListAC = (data) => {\r\n    return {\r\n        type: UPDATELIST,\r\n        data: data\r\n    };\r\n}\r\nexport const addTaskAC = () => {\r\n    return {\r\n        type: ADDTASK\r\n    };\r\n}\r\nexport const UpdateTaskAC = (date, name, id) => {\r\n    return {\r\n        type: UPDATETASK,\r\n        data: date,\r\n        name: name,\r\n        id: id\r\n    };\r\n}\r\nexport function changeStatusAC(data) {\r\n    return {\r\n        type: CHANGESTATUS,\r\n        data: data.data,\r\n        name: data.name,\r\n        id: data.id\r\n    }\r\n}\r\nexport function TmpElemAC(data) {\r\n    return (\r\n        {\r\n            type: TEMPORARYTASK,\r\n            data: data.data,\r\n            name: data.name,\r\n            id: data.id\r\n        }\r\n    )\r\n}\r\nexport function changeIdTask(id) {\r\n    return (\r\n        {\r\n            type: CHANGEIDTASK,\r\n            changeIdTask: id\r\n        }\r\n    )\r\n}\r\n\r\nfunction listTaskReducer(state = initialState, action) {\r\n    //debugger;\r\n    switch (action.type) {\r\n        case 'ApdateOneItemFromDB':\r\n            var newState = {\r\n                ...state,\r\n                arrTasks: [...state.arrTasks]\r\n            };\r\n            var taskIndex = newState.arrTasks.findIndex(item => item.id == action.data[0].id);\r\n            newState.arrTasks[taskIndex] = { ...action.data[0] };\r\n            return newState;\r\n        case SAVEITEM:\r\n            var task = state.arrTasks.find(item => item.id == action.id);\r\n            var jsonTask = JSON.stringify(task)\r\n            myAxios('post',{updateTask: jsonTask}).then(function (response) {\r\n                    var newData = JSON.parse(response.data);\r\n                    action.dispatch({ type: 'ApdateOneItemFromDB', data: newData })\r\n                });\r\n            return state\r\n        case UPDATELIST:\r\n            //alert('helloKPP')\r\n            var newState = {\r\n                ...state,\r\n                arrTasks: [...action.data]\r\n            };\r\n            //var newState= action.data\r\n\r\n            return newState\r\n        case 'addNewTask':\r\n            var newState = {\r\n                ...state,\r\n                arrTasks: [...state.arrTasks, { ...action.data[0] }]\r\n            };\r\n            return newState;\r\n\r\n        case ADDTASK:\r\n            var newState = {\r\n                ...state,\r\n                arrTasks: [...state.arrTasks]\r\n            };\r\n            let cloneAddTask = Object.assign({}, state.temporaryTask);\r\n            var now = new Date();\r\n            var m = now.toLocaleString(\"ru\", { month: '2-digit' });\r\n            var d = now.toLocaleString(\"ru\", { day: '2-digit' });\r\n            var y = now.toLocaleString(\"ru\", { year: 'numeric' });\r\n\r\n            cloneAddTask.id = state.arrTasks.length;\r\n            cloneAddTask.dateCreate = `${y}-${m}-${d}`;\r\n\r\n            var jsonTask = JSON.stringify(cloneAddTask)\r\n            myAxios('post',{addTask: jsonTask}).then(function (response) {\r\n                    var newData = JSON.parse(response.data);\r\n                    action.dispatch({ type: 'addNewTask', data: newData })\r\n                });\r\n            return state\r\n\r\n            newState.arrTasks.push(cloneAddTask);\r\n            return newState;\r\n        case UPDATETASK:\r\n            var newState = {\r\n                ...state,\r\n                arrTasks: [...state.arrTasks]\r\n            };\r\n            var idTask = newState.arrTasks.findIndex(item => item.id == action.id);\r\n            newState.arrTasks[idTask][action.name] = action.data;\r\n            switch (action.name) {\r\n                case \"executor_id\":\r\n                    switch (action.data) {\r\n                        case '1':\r\n                            newState['arrTasks'][idTask]['executor_name'] = 'Кулешов П.';\r\n                            break;\r\n                        case '2':\r\n                            newState['arrTasks'][idTask]['executor_name'] = 'Темкина Д.';\r\n                            break;\r\n                        case '3':\r\n                            newState['arrTasks'][idTask]['executor_name'] = 'Маркелова Е.';\r\n                            break;\r\n                    }\r\n                case \"tyteTask_id\":\r\n                    switch (action.data) {\r\n                        case '1':\r\n                            newState['arrTasks'][idTask]['tyteTask_name'] = 'Простая';\r\n                            break;\r\n                        case '2':\r\n                            newState['arrTasks'][idTask]['tyteTask_name'] = 'Средняя';\r\n                            break;\r\n                        case '3':\r\n                            newState['arrTasks'][idTask]['tyteTask_name'] = 'Сложная';\r\n                            break;\r\n                    }\r\n            }\r\n            newState.arrTasks[idTask].saved = 0;\r\n            return newState;\r\n        case TEMPORARYTASK:\r\n            var tmpState = {\r\n                ...state,\r\n                temporaryTask: { ...state.temporaryTask }\r\n            };\r\n            tmpState.temporaryTask[action.name] = action.data;\r\n            switch (action.name) {\r\n                case \"executor_id\":\r\n                    switch (action.data) {\r\n                        case '1':\r\n                            tmpState['temporaryTask']['executor_name'] = 'Кулешов П.';\r\n                            break;\r\n                        case '2':\r\n                            tmpState['temporaryTask']['executor_name'] = 'Темкина Д.';\r\n                            break;\r\n                        case '3':\r\n                            tmpState['temporaryTask']['executor_name'] = 'Маркелова Е.';\r\n                            break;\r\n                    }\r\n                case \"tyteTask_id\":\r\n                    switch (action.data) {\r\n                        case '1':\r\n                            tmpState['temporaryTask']['tyteTask_name'] = 'Простая';\r\n                            break;\r\n                        case '2':\r\n                            tmpState['temporaryTask']['tyteTask_name'] = 'Средняя';\r\n                            break;\r\n                        case '3':\r\n                            tmpState['temporaryTask']['tyteTask_name'] = 'Сложная';\r\n                            break;\r\n                    }\r\n            }\r\n            return tmpState;\r\n        case CHANGESTATUS:\r\n\r\n            var newState = {\r\n                ...state,\r\n                arrTasks: [...state.arrTasks]\r\n            };\r\n            var idTask = newState.arrTasks.findIndex(item => item.id == action.id);\r\n            var now = new Date();\r\n            var m = now.toLocaleString(\"ru\", { month: '2-digit' });\r\n            var d = now.toLocaleString(\"ru\", { day: '2-digit' });\r\n            var y = now.toLocaleString(\"ru\", { year: 'numeric' });\r\n\r\n            newState.arrTasks[idTask][action.name] = action.data;\r\n\r\n            newState.arrTasks[idTask]['dateComplete'] = `${y}-${m}-${d}`;\r\n            newState.arrTasks[idTask].saved = 0;\r\n            return newState;\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\nexport default listTaskReducer;","import { NavLink } from \"react-router-dom\";\r\nimport { updateListAC, myAxios } from \"../../redux/reducers/reducer_ListTask\";\r\nimport { connect } from \"react-redux\";\r\n\r\nfunction NavBar(props) {\r\n    return (\r\n        <div className=\"btn-group\" role=\"group\" aria-label=\"Basic example\">\r\n            <NavLink to='/AddTask' className=\"btn btn-primary\">Создать задачу</NavLink>\r\n            <NavLink to='/listTask' className=\"btn btn-primary\">Список задачь</NavLink>\r\n            <button className=\"btn btn-primary\" onClick={props.mydispatch}>Обновить список</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {}\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        mydispatch: function (e) {\r\n            myAxios().then(function (response) {\r\n                    dispatch(\r\n                        updateListAC(JSON.parse(response.data))                        \r\n                    )\r\n                })\r\n        }\r\n    }\r\n}\r\n\r\n\r\nlet UpdateListContainer = connect(mapStateToProps, mapDispatchToProps)(NavBar);\r\n\r\nexport default UpdateListContainer;","function UpdateTask(props) {\r\n  //debugger;\r\n\r\n  let executors=props.dirExecutors?props.dirExecutors.map(item=><option kay={item.id} value={item.id}>{item.name}</option>):[];\r\n  let tyteTasks=props.dirTyteTasks?props.dirTyteTasks.map(item=><option kay={item.id} value={item.id}>{item.name}</option>):[];\r\n\r\n  return (\r\n    <div>\r\n      <form>\r\n        <h5 className='d-inline-block'>Подробности задачи</h5>\r\n        <div className=\"mb-3\">\r\n          <label className=\"form-label\">Кому назначить</label>\r\n          <select className=\"form-control\" value={props.dataTask.executor_id} onChange={props.callToUpdateTask} data-name='executor_id' data-id={props.dataTask.id}>\r\n            <option></option>\r\n            {executors}\r\n          </select>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col-6\">\r\n            <div className=\"mb-3\">\r\n              <label className=\"form-label\">Текст задачи</label>\r\n              <textarea className=\"form-control\" rows=\"3\"\r\n                onChange={props.callToUpdateTask} data-name='task' data-id={props.dataTask.id} value={props.dataTask.task}></textarea>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-6\">\r\n            <div className=\"mb-3\">\r\n              <label className=\"form-label\">Ожидаемый результат</label>\r\n              <textarea className=\"form-control\" rows=\"3\"\r\n                onChange={props.callToUpdateTask} data-name='result' data-id={props.dataTask.id} value={props.dataTask.result}></textarea>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col-4\">\r\n            <label className=\"form-label\">Дата начала выполнения</label>\r\n            <input type=\"date\" className=\"form-control\"\r\n              onChange={props.callToUpdateTask} data-name='dateBegeen' data-id={props.dataTask.id}\r\n              value={props.dataTask.dateBegeen}></input>\r\n          </div>\r\n          <div className=\"col-4\">\r\n            <label className=\"form-label\">Дата окончания</label>\r\n            <input type=\"date\" className=\"form-control\"\r\n              onChange={props.callToUpdateTask} data-name='dateEnd' data-id={props.dataTask.id}\r\n              value={props.dataTask.dateEnd}></input>\r\n          </div>\r\n          <div className=\"col-4\">\r\n            <label className=\"form-label\">Тип задачи</label>\r\n            <select className=\"form-control\"\r\n              onChange={props.callToUpdateTask} data-name='tyteTask_id' data-id={props.dataTask.id}\r\n              value={props.dataTask.tyteTask_id}>\r\n              <option></option>\r\n              {tyteTasks}\r\n            </select>\r\n          </div>\r\n        </div>\r\n        <div className=\"mb-3\">\r\n          <label className=\"form-label\">Пояснения исполнителя</label>\r\n          <textarea className=\"form-control\" rows=\"3\"\r\n            onChange={props.callToUpdateTask} data-name='textComplete' data-id={props.dataTask.id} value={props.dataTask.textComplete}></textarea>\r\n        </div>\r\n\r\n        <CheckRadio changeStatus={props.changeStatus} id={props.dataTask.id} value='1' valArr={props.dataTask.statusTask} name='Выполнено'/>\r\n        <CheckRadio changeStatus={props.changeStatus} id={props.dataTask.id} value='-1' valArr={props.dataTask.statusTask} name='Отменено'/>\r\n        <CheckRadio changeStatus={props.changeStatus} id={props.dataTask.id} value={null} valArr={props.dataTask.statusTask} name='Нет статуса'/>\r\n\r\n        \r\n        <button className=\"btn btn-success w-100 mt-2\" data-id={props.dataTask.id} onClick={props.saveItem}>Сохранить</button>\r\n        \r\n      </form>\r\n\r\n    </ div >\r\n  )\r\n}\r\n\r\nfunction CheckRadio(props) {\r\n  //debugger;\r\n  var checked = props.value == props.valArr ? true : false;\r\n  return (\r\n    <div className=\"form-check form-check-inline\">\r\n      <label className=\"form-check-label\">\r\n        <input onChange={props.changeStatus} name='statustask' className=\"form-check-input\" type=\"radio\" kay={props.id} data-id={props.id} checked={checked} data-statustask={props.value}></input>\r\n        {props.name}</label>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default UpdateTask;","import { connect } from \"react-redux\";\r\nimport UpdateTask from \"./updateTask\";\r\nimport { Route } from 'react-router-dom';\r\nimport { UpdateTaskAC, changeStatusAC, saveItemAC } from \"../../../redux/reducers/reducer_ListTask\";\r\n\r\nfunction ContainerRouteUpdateTask(props) {\r\n    //debugger;\r\n    return <Route path=\"/ReadTask\" render={() =>\r\n        <RouteUpdateTask\r\n            changeStatus={props.changeStatus}\r\n            callToUpdateTask={props.callToUpdateTask}\r\n            saveItem={props.saveItem}\r\n            dataTasks={props.dataTasks}\r\n            dirExecutors={props.dirExecutors}\r\n            dirTyteTasks={props.dirTyteTasks} />} />\r\n}\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dataTasks: state.arrTasks.arrTasks,\r\n        dirExecutors: state.directoryes.dir_executors,\r\n        dirTyteTasks: state.directoryes.dir_tyteTasks\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        saveItem: function (e) {\r\n            e.preventDefault();\r\n            var action = saveItemAC({\r\n                id: e.target.getAttribute('data-id')\r\n            });\r\n            action.dispatch = dispatch;\r\n            dispatch(action)\r\n        },\r\n        changeStatus: function (e) {\r\n            dispatch(\r\n                changeStatusAC({\r\n                    data: e.target.getAttribute('data-statustask'),\r\n                    name: 'statusTask',\r\n                    id: e.target.getAttribute('data-id')\r\n                })\r\n            )\r\n        },\r\n        callToUpdateTask: function (e) {\r\n            dispatch(\r\n                UpdateTaskAC(\r\n                    e.target.value,\r\n                    e.target.getAttribute('data-name'),\r\n                    e.target.getAttribute('data-id')\r\n                )\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nlet ContainerUpdateTask = connect(mapStateToProps, mapDispatchToProps)(ContainerRouteUpdateTask);\r\n\r\nfunction RouteUpdateTask(props) {\r\n    //debugger;\r\n    if (!props.dataTasks) {\r\n        return <div></div>\r\n    }\r\n    let url = window.location.href;\r\n    let idTask = url.split('/');\r\n    idTask = idTask[idTask.length - 1];\r\n    let task = props.dataTasks.find(item => item.id == idTask);\r\n    if (!task) return <div></div>;\r\n\r\n    return (\r\n        <UpdateTask changeStatus={props.changeStatus}\r\n            callToUpdateTask={props.callToUpdateTask}\r\n            saveItem={props.saveItem}\r\n            dataTask={task}\r\n            dirExecutors={props.dirExecutors}\r\n            dirTyteTasks={props.dirTyteTasks} />\r\n    )\r\n\r\n}\r\n\r\n\r\n\r\nexport default ContainerUpdateTask;","function AddTask(props) {\r\n  //debugger;\r\n  let executors=props.dirExecutors?props.dirExecutors.map(item=><option kay={item.id} value={item.id}>{item.name}</option>):[];\r\n  let tyteTasks=props.dirTyteTasks?props.dirTyteTasks.map(item=><option kay={item.id} value={item.id}>{item.name}</option>):[];\r\n  return (\r\n    <div>\r\n      <form onSubmit={props.addElem}>\r\n        <h5 className='d-inline-block'>Добавить задачу</h5>\r\n        <div className=\"mb-3\">\r\n          <label className=\"form-label\">Кому назначить</label>\r\n          <select className=\"form-control\" value={props.dataTask.executor_id} onChange={props.callTmpElem} data-name='executor_id' data-id='0'>\r\n            <option></option>\r\n            {executors}\r\n          </select>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col-6\">\r\n            <div className=\"mb-3\">\r\n              <label className=\"form-label\">Текст задачи</label>\r\n              <textarea className=\"form-control\" rows=\"3\"\r\n                onChange={props.callTmpElem} data-name='task' data-id='0' value={props.dataTask.task}></textarea>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-6\">\r\n            <div className=\"mb-3\">\r\n              <label className=\"form-label\">Ожидаемый результат</label>\r\n              <textarea className=\"form-control\" rows=\"3\"\r\n                onChange={props.callTmpElem} data-name='result' data-id='0' value={props.dataTask.result}></textarea>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col-4\">\r\n            <label className=\"form-label\">Дата начала выполнения</label>\r\n            <input type=\"date\" className=\"form-control\"\r\n              onChange={props.callTmpElem} data-name='dateBegeen' data-id='0'\r\n              value={props.dataTask.dateBegeen}></input>\r\n          </div>\r\n          <div className=\"col-4\">\r\n            <label className=\"form-label\">Дата окончания</label>\r\n            <input type=\"date\" className=\"form-control\"\r\n              onChange={props.callTmpElem} data-name='dateEnd' data-id='0'\r\n              value={props.dataTask.dateEnd}></input>\r\n          </div>\r\n          <div className=\"col-4\">\r\n            <label className=\"form-label\">Тип задачи</label>\r\n            <select className=\"form-control\"\r\n              onChange={props.callTmpElem} data-name='tyteTask_id' data-id='0'\r\n              value={props.dataTask.tyteTask_id}>\r\n              <option></option>\r\n              {tyteTasks}\r\n            </select>\r\n          </div>\r\n        </div>\r\n\r\n        <button type=\"submit\" className=\"btn btn-primary w-100 mt-2\">Добавить</button>\r\n      </form>\r\n\r\n    </ div>\r\n  )\r\n}\r\nexport default AddTask;","import { connect } from \"react-redux\";\r\nimport AddTask from \"./addTask\";\r\nimport { addTaskAC, TmpElemAC } from \"../../../redux/reducers/reducer_ListTask\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    //debugger;\r\n    return {\r\n        dataTask: state.arrTasks.temporaryTask,\r\n        dirExecutors: state.directoryes.dir_executors,\r\n        dirTyteTasks: state.directoryes.dir_tyteTasks\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        callTmpElem: function(e) {\r\n            dispatch(\r\n                TmpElemAC({\r\n                    data: e.target.value,\r\n                    name: e.target.getAttribute('data-name'),\r\n                    id: e.target.getAttribute('data-id')\r\n                })\r\n            )\r\n        },\r\n        addElem: function(e) {\r\n            e.preventDefault();\r\n            var action=addTaskAC();\r\n            action.dispatch=dispatch;\r\n            dispatch(\r\n                action\r\n            )\r\n          }\r\n\r\n    }\r\n}\r\n\r\n\r\nlet AddTaskContainer = connect(mapStateToProps, mapDispatchToProps)(AddTask);\r\n\r\nexport default AddTaskContainer;","import React from \"react\";\r\nimport { component } from \"react\";\r\nimport reactDom from \"react-dom\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\n\r\n\r\n\r\nfunction TaskRow(props) {\r\n    let color = props.idUser != props.dataTask.executor_id ? \"bg-secondary\" : \"\";\r\n    let myRef = \"/ReadTask/\" + props.dataTask.id;\r\n    let style = '';\r\n    let simv = \"\";\r\n    if (props.dataTask.statusTask == 1) simv = \"\\u{2705}\";\r\n    if (props.dataTask.statusTask == -1) simv = \"\\u{274C}\";\r\n    let saved = props.dataTask.saved ? \"\\u{2705}\" : \"\\u{274C}\";\r\n    var dateBegeen = new Date(props.dataTask.dateBegeen);\r\n    var m = dateBegeen.toLocaleString(\"ru\", { month: '2-digit' });\r\n    var d = dateBegeen.toLocaleString(\"ru\", { day: '2-digit' });\r\n    var y = dateBegeen.toLocaleString(\"ru\", { year: 'numeric' });\r\n    var dateBegeen = `${d}.${m}.${y}`;\r\n    var dateEnd = new Date(props.dataTask.dateEnd);\r\n    var m = dateEnd.toLocaleString(\"ru\", { month: '2-digit' });\r\n    var d = dateEnd.toLocaleString(\"ru\", { day: '2-digit' });\r\n    var y = dateEnd.toLocaleString(\"ru\", { year: 'numeric' });\r\n    var dateEnd = `${d}.${m}.${y}`;\r\n\r\n    return (\r\n        <tr className={color + ' ' + style} key={props.dataTask.id}>\r\n            <td><NavLink to={myRef}>{props.dataTask.id}</NavLink></td>\r\n            <td>{simv}</td>\r\n            <td>{dateBegeen}</td>\r\n            <td>{dateEnd}</td>\r\n            <td>{props.dataTask.executor_name}</td>\r\n            <td>{props.dataTask.task}</td>\r\n            <td>{props.dataTask.tyteTask_name}</td>\r\n            <td>{saved}</td>\r\n        </tr>\r\n    )\r\n\r\n}\r\n\r\nclass ListTasks extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    componentDidMount() {\r\n        if (this.props.updateList) this.props.updateList();\r\n        //if (this.props.updateList) this.props.updateList();\r\n        if (this.props.updateList) this.props.updateDirs();\r\n    }\r\n\r\n    render() {\r\n        if (!this.props.dataTasks) {\r\n            return <dir></dir>\r\n        }\r\n        let rows = this.props.dataTasks.map((item) =>\r\n            <TaskRow dataTask={item} idUser='1' />\r\n        );\r\n        return (\r\n            <div>\r\n                <h5>{this.props.title}</h5>\r\n                <table className=\"table\">\r\n                    <thead>\r\n                        <tr key='-1'>\r\n                            <th scope=\"col\">id</th>\r\n                            <th scope=\"col\">Статус</th>\r\n                            <th scope=\"col\">Дата начала</th>\r\n                            <th scope=\"col\">Дата завершения</th>\r\n                            <th scope=\"col\">Исполнитель</th>\r\n                            <th scope=\"col\">Текст задачи</th>\r\n                            <th scope=\"col\">Тип задачи</th>\r\n                            <th scope=\"col\">Сохранен</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {rows}\r\n                    </tbody>\r\n                </table>\r\n            </div >\r\n        )\r\n    }\r\n}\r\nexport default ListTasks","import ListTasks from \"../listTasks/listTasks\";\r\nfunction TasksAlert(props) {\r\n    //debugger;\r\n    var now=new Date();\r\n    var m=now.toLocaleString(\"ru\", {month: '2-digit'});\r\n    var d=now.toLocaleString(\"ru\", {day: '2-digit'});\r\n    var y=now.toLocaleString(\"ru\", {year: 'numeric'});\r\n    var toDay=`${y}-${m}-${d}`;\r\n\r\n    let arrToDay=[];\r\n\r\n    if(!props.dataTasks){\r\n        return <div></div>\r\n    }\r\n\r\n    props.dataTasks.forEach(function(item) {\r\n        if(props.difDate(item.dateEnd, toDay,item.statusTask)){\r\n            arrToDay.push(item);\r\n        }\r\n      });\r\n    if(!arrToDay.length) return \"\";\r\n    return (\r\n        <div className={\"alert mt-2 bg-transparent border-2 \"+props.borderColor}>\r\n            <ListTasks dataTasks={arrToDay} title={props.totalText}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TasksAlert","import { connect } from \"react-redux\";\r\nimport TasksAlert from \"./tasksAlert\";\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    dataTasks: state.arrTasks.arrTasks,\r\n    dateDiff: function (date, toDay, status) {\r\n      //debugger;\r\n      //console.log(status);\r\n      toDay = new Date(toDay);\r\n      date = new Date(date);\r\n      return toDay > date && status == null;\r\n    },\r\n    dateEqual: function (date, toDay) {\r\n      return date == toDay;\r\n    }\r\n  }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {}\r\n}\r\n\r\nlet AlertsContainer = connect(mapStateToProps, mapDispatchToProps)(Alerts);\r\n\r\nfunction Alerts(props) {\r\n  return (\r\n    <div>\r\n      <TasksAlert dataTasks={props.dataTasks} difDate={props.dateDiff} borderColor=\"border-danger\" totalText=\"Задачи просрочены\" />\r\n      <TasksAlert dataTasks={props.dataTasks} difDate={props.dateEqual} borderColor=\"border-warning\" totalText=\"Задачи на сегодня\" />\r\n    </div>\r\n  )\r\n} \r\n\r\nexport default AlertsContainer","import { connect } from \"react-redux\";\r\nimport ListTasks from \"./listTasks\";\r\nimport { myAxios } from \"../../redux/reducers/reducer_ListTask\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dataTasks: state.arrTasks.arrTasks,\r\n        title: \"Список задачь\"\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n    //debugger;\r\n    return {\r\n        updateList: function (e) {\r\n            myAxios().then(function (response) {\r\n                dispatch({\r\n                    type: 'updateList',\r\n                    data: JSON.parse(response.data)\r\n                })\r\n            })\r\n        },\r\n        updateDirs: function () {\r\n            myAxios('post', { updateDirs: 1 }).then(function (response) {\r\n                //console.log(JSON.parse(response.data));\r\n                dispatch({\r\n                    type: 'updateDirs',\r\n                    data: JSON.parse(response.data)\r\n                })\r\n            })\r\n\r\n        }\r\n    }\r\n}\r\nfunction borderListTasks(props) {\r\n    return (\r\n        <div className={\"alert mt-2 bg-transparent border-2 border-secondary\"}>\r\n            <ListTasks\r\n                dataTasks={props.dataTasks}\r\n                title={props.title}\r\n                updateList={props.updateList}\r\n                updateDirs={props.updateDirs}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nlet ContainerListTasks = connect(mapStateToProps, mapDispatchToProps)(borderListTasks);\r\n\r\nexport default ContainerListTasks;","import logo from '../logo.svg';\r\nimport '../App.css';\r\nimport NavBar from \"./navTask/navTask\";\r\nimport { Route } from 'react-router-dom';\r\nimport ContainerUpdateTask from \"./form/updateTask/containerUpdateTask\";\r\nimport ContainerAddTask from \"./form/addTask/containerAddTask\";\r\nimport ContainerAlerts from \"./tasksAlert/containerAlerts\";\r\nimport ContainerListTasks from \"./listTasks/containerListTasks\";\r\n\r\nfunction TodoStart() {\r\n    return (\r\n        <div>\r\n            <NavBar />\r\n            <img src={logo} className=\"App-logo float-right mb-2\" alt=\"logo\" />\r\n            <Route path=\"/AddTask\" render={() => <ContainerAddTask />} />\r\n            <ContainerUpdateTask />\r\n            <Route exact path=\"/AddTaskInside/\" render={() => <ContainerAlerts />} />\r\n            <Route path=\"/AddTaskInside/listTask\" render={() => <ContainerAlerts />} />\r\n            <Route path=\"/AddTaskInside/listTask\" render={() => <ContainerListTasks />} />\r\n            <Route path=\"/AddTaskDO\" render={() => <div>hello</div>} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TodoStart","import { NavLink } from \"react-router-dom\";\r\n\r\n/* import { updateListAC, myAxios } from \"../../redux/reducers/reducer_ListTask\";\r\nimport { connect } from \"react-redux\"; */\r\n\r\nfunction NavBar(props) {\r\n    //debugger;\r\n    //console.log(props)\r\n    var Myerror = {};\r\n\r\n    var check = (item, number) => {\r\n        if(!(props.errors.allInputs.findIndex(itemF => itemF == item) == -1)){\r\n            return props.errors[item].step == number && props.errors[item].error && props.errors[item].touched\r\n        }\r\n    }\r\n\r\n    //debugger\r\n    //props.errors[item].step==2&&props.errors[item].error&&props.errors[item].touched\r\n    Object.keys(props.errors).forEach(item => {\r\n        /* if (item == 'MainCP') {\r\n            console.log(item)\r\n            console.log(props.errors[item].touched)\r\n        } */\r\n\r\n        /* console.log(item)\r\n        console.log(item.touched) */\r\n        /* console.log(props.errors['item']) */\r\n        if (check(item, 1)) Myerror.step1 = true;\r\n        if (check(item, 2)) Myerror.step2 = true;\r\n        if (check(item, 3)) Myerror.step3 = true;\r\n        if (check(item, 4)) Myerror.step4 = true;\r\n        if (check(item, 5)) Myerror.step5 = true;\r\n    })\r\n    let idTask = props.match.params.idtask ? `/${props.match.params.idtask}` : '';\r\n    return (\r\n        <div className=\"btn-group\" role=\"group\" aria-label=\"Basic example\">\r\n            <NavLink to={`/react/AddTaskDO/step1${idTask}`} className={Myerror.step1 ? 'btn btn-danger' : 'btn btn-primary'}>Шаг 1</NavLink>\r\n            <NavLink to={`/react/AddTaskDO/step2${idTask}`} className={Myerror.step2 ? 'btn btn-danger' : 'btn btn-primary'}>Шаг 2</NavLink>\r\n            <NavLink to={`/react/AddTaskDO/step3${idTask}`} className={Myerror.step3 ? 'btn btn-danger' : 'btn btn-primary'}>Шаг 3</NavLink>\r\n            <NavLink to={`/react/AddTaskDO/step4${idTask}`} className={Myerror.step4 ? 'btn btn-danger' : 'btn btn-primary'}>Шаг 4</NavLink>\r\n            <NavLink to={`/react/AddTaskDO/step5${idTask}`} className={Myerror.step5 ? 'btn btn-danger' : 'btn btn-primary'}>Шаг 5</NavLink>\r\n            <NavLink to={`/react/AddTaskDO/allSteps${idTask}`} className=\"btn btn-primary\">Все шаги</NavLink>\r\n            <NavLink to='/react/AddTaskDO/listTask' className=\"btn btn-primary\">Список задачь</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NavBar;","import NavTask from \"./navTask\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router\";\r\nimport { compose } from \"redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    //debugger;\r\n    return {\r\n        errors: state.TaskDOForm.errors\r\n        \r\n    }\r\n}\r\n\r\n\r\nlet navTaskContainer = compose(connect(mapStateToProps,{}),withRouter)(NavTask);\r\nexport default navTaskContainer","function findRequired(arr,name){\r\n    return!(arr.findIndex(item => item == name) == -1)\r\n}\r\nexport function MyInput(props) {\r\n    function getClassError(error, touched) {\r\n        return error && touched ? 'form-control is-invalid' : 'form-control'\r\n    }\r\n    return (\r\n        <div>\r\n            <input {...props.input} className={getClassError(props.meta.error, props.meta.touched)} />\r\n            <div className=\"invalid-feedback\">\r\n                {props.meta.error && props.meta.touched && props.meta.error}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport function MyTextArea(props) {\r\n    function getClassError(error, touched) {\r\n        return error && touched ? 'form-control is-invalid' : 'form-control'\r\n    }\r\n    return (\r\n        <div>\r\n            <textarea {...props.input} rows={props.rows} className={getClassError(props.meta.error, props.meta.touched)} />\r\n            <div className=\"invalid-feedback\">\r\n                {props.meta.error && props.meta.touched && props.meta.error}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport function MySelect(props) {\r\n    function getClassError(error, touched) {\r\n        return error && touched ? 'form-control is-invalid' : 'form-control'\r\n    }\r\n    ///console.log(props)\r\n    return (\r\n        <div>\r\n            <select {...props.input} className={getClassError(props.meta.error, props.meta.touched)}>\r\n                {props.children}\r\n            </select>\r\n            <div className=\"invalid-feedback\">\r\n                {props.meta.error && props.meta.touched && props.meta.error}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport function MySelectKPP(props) {\r\n    let redStar =findRequired(props.errors.allInputs,props.name)?<span className='text-danger'>*</span>:'';\r\n    //debugger\r\n    let myError = props.validation(props.name) ? 'form-control is-invalid' : 'form-control';\r\n    let title = props.title ? <label><h6>{props.title}{redStar}:</h6></label> : '';\r\n    /* console.log('MySelectKPP')\r\n    console.log(props) */\r\n    let touched = props.onBlur(props.name)\r\n    let myVal=props.temporaryTaskDO[props.name];\r\n    if(typeof props.temporaryTaskDO[props.name]=='object'){\r\n        //console.log('hello')\r\n        myVal=props.temporaryTaskDO[props.name][0]==\"\"?'':myVal;\r\n    }\r\n    /* console.log(typeof props.temporaryTaskDO[props.name]=='object')\r\n    console.log('myVal')\r\n    console.log(myVal) */\r\n    return (<div className=\"form-group \">\r\n        {title}\r\n        <select className={myError} value={props.temporaryTaskDO[props.name]} size={props.size}\r\n            data-name={props.name}\r\n            onChange={props.onChange}\r\n            onDoubleClick={props.onDoubleClick}\r\n            onBlur={touched}\r\n        >\r\n            <option value={null}></option>\r\n            {props.children}\r\n        </ select>\r\n        <div className=\"invalid-feedback\">\r\n            Обязательное поле для заполнения.\r\n        </div>\r\n    </div>)\r\n}\r\n\r\nexport function MyInputKPP(props) {\r\n    //debugger\r\n\r\n    let redStar =findRequired(props.errors.allInputs,props.name)?<span className='text-danger'>*</span>:'';\r\n    //debugger\r\n    let myError = props.validation(props.name) ? 'form-control is-invalid' : 'form-control';\r\n    let title = props.title ? <label><h6>{props.title}{redStar}:</h6></label> : '';\r\n    let touched = props.onBlur(props.name);\r\n    return (<div className=\"form-group \">\r\n        {title}\r\n        <input type={props.type} className={myError} value={props.temporaryTaskDO[props.name]}\r\n            data-name={props.name}\r\n            onChange={props.onChange}\r\n            onBlur={touched}\r\n            placeholder={props.placeholder} />\r\n        <div className=\"invalid-feedback\">\r\n            Обязательное поле для заполнения.\r\n        </div>\r\n    </div>)\r\n}\r\n\r\nexport function MyChekBoxKPP(props) {\r\n    let value = props.temporaryTaskDO[props.name];\r\n    let valTrue = value == props.values[0].id ? true : false;\r\n    let valfalse = value == props.values[1].id ? true : false;\r\n    let errorBorder = \"border border-danger\";\r\n    let touched = props.onBlur(props.name);\r\n    let redStar =findRequired(props.errors.allInputs,props.name)?<span className='text-danger'>*</span>:'';\r\n    //console.log(props.errors);\r\n    let myError = props.validation(props.name) ? 'form-group is-invalid' : 'form-group';\r\n    return (\r\n        <div className=\"form-group\">\r\n            <label><h6>{props.title}{redStar}:</h6></label>\r\n            <div className={myError}>\r\n                <div className=\"form-check form-check-inline\">\r\n                    <label className=\"form-check-label\">\r\n                        <input onChange={props.onChange}\r\n                            onBlur={touched}\r\n                            data-name={props.name} data-bool='true' className=\"form-check-input\"\r\n                            type=\"radio\" name={props.name} value={props.values[0].id}\r\n                            checked={valTrue}></input>\r\n                        {props.values[0].name}\r\n                    </label>\r\n                </div>\r\n\r\n                <div className=\"form-check form-check-inline\">\r\n                    <label className=\"form-check-label\">\r\n                        <input onChange={props.onChange}\r\n                            data-name={props.name} data-bool='false' className=\"form-check-input\"\r\n                            type=\"radio\" name={props.name} value={props.values[1].id}\r\n                            checked={valfalse}></input>\r\n                        {props.values[1].name}</label>\r\n                </div>\r\n            </div>\r\n            <div className=\"invalid-feedback\">\r\n                Обязательное поле для заполнения.\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport function MyTextAreaKPP(props) {\r\n    //debugger\r\n    let changeData = (e) => {\r\n        //debugger;\r\n        props.changeDataAC({\r\n            name: e.target.getAttribute('data-name'),\r\n            data: e.target.value\r\n        })\r\n    }\r\n    let redStar =findRequired(props.errors.allInputs,props.name)?<span className='text-danger'>*</span>:'';\r\n    let myError = props.validation(props.name)  ? 'form-control is-invalid' : 'form-control';\r\n    let touched = props.onBlur(props.name);\r\n    return (<div className=\"form-group \">\r\n        <label><h6>{props.title}{redStar}:</h6></label>{props.addBtn}\r\n        <textarea className={myError} rows={props.rows} value={props.temporaryTaskDO[props.name]}\r\n            data-name={props.name} \r\n            onChange={props.onChange}\r\n            onBlur={touched} />\r\n        <div className=\"invalid-feedback\">\r\n            Обязательное поле для заполнения.\r\n        </div>\r\n    </div>)\r\n}\r\n\r\nexport function MyInputFileKPP(props) {\r\n    let myError = props.validation(props.name) ? 'form-control-file is-invalid' : 'form-control-file';\r\n    let redStar =findRequired(props.errors.allInputs,props.name)?<span className='text-danger'>*</span>:'';\r\n    let touched = props.onBlur(props.name);\r\n    function selectedFiles(arr) {\r\n        if (!arr.length) return <></>\r\n        var newArr = [];\r\n        for (var i = 0; i < arr.length; i++) {\r\n            newArr.push(arr[i])\r\n            newArr[i].id = i\r\n        }\r\n        //console.log(newArr)\r\n        let selectedFilesSY = newArr.map(item =>\r\n            <p className='ml-2' key={item.id}>{item.name}</p>)\r\n        {/* <span className='finger'\r\n                data-id={item.id}\r\n                onClick={this.deleteServicesListSelected}>&#10060;</span> */}\r\n        return <div>\r\n            <h6 className='d-inline-block'>Выбранные файлы</h6>\r\n            <a className='ml-3' onClick={clearData} href='#'>&#10060;Очистить</a>\r\n            {selectedFilesSY}\r\n        </div>\r\n    }\r\n    function clearData(e) {\r\n        e.preventDefault();\r\n        props.clearDataAC({ name: [props.name] })\r\n    }\r\n    return (\r\n        <div className=\"form-group\">\r\n            <label><h6>{props.title}{redStar}</h6></label>\r\n            <input type=\"file\" className={myError} data-name={[props.name]} \r\n                onChange={props.onChange}\r\n                onBlur={touched} multiple />\r\n            {selectedFiles(props.temporaryTaskDO[props.name])}\r\n            <div className=\"invalid-feedback\">\r\n                Обязательное поле для заполнения.\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from \"react\"\r\nimport { MySelectKPP, MyInputKPP, MyChekBoxKPP } from \"../inputs/inputs\";\r\n\r\n\r\n\r\n\r\nclass Step1 extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.toggleSelectContractForm = this.toggleSelectContractForm.bind(this)\r\n        this.changeData = this.changeData.bind(this)\r\n        this.getDepartments = this.getDepartments.bind(this)\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.getTypesContract()\r\n        if (this.props.TypeService) this.props.getDepartments(this.props.TypeService)\r\n        let urlIdTask = this.props.match.params.idtask;\r\n        if (urlIdTask &&\r\n            urlIdTask != this.props.temporaryTaskDO.ID) this.props.getTask(urlIdTask)\r\n    }\r\n\r\n    getDepartments(e) {\r\n        this.props.getDepartments(e.target.value, true)\r\n    }\r\n\r\n    toggleSelectContractForm(e) {\r\n        var datatoggle = e.target.getAttribute('data-bool');\r\n        datatoggle = datatoggle == 'true' ? true : false;\r\n        this.props.toggleSelectContractFormAC(datatoggle)\r\n    }\r\n    changeData(e) {\r\n        //debugger;\r\n        //console.log(e.target.getAttribute('value'))\r\n        this.props.changeDataAC({\r\n            name: e.target.getAttribute('data-name'),\r\n            data: e.target.value\r\n        })\r\n    }\r\n    touched = (name) => {\r\n        //debugger\r\n        return () => this.props.touchedAC(name)\r\n    }\r\n\r\n    validationRequired = (name) => {\r\n        var find = !(this.props.errors.allInputs.findIndex(item => item == name) == -1)\r\n        return find && this.props.errors[name].touched && this.props.errors[name].error\r\n    }\r\n\r\n    render() {\r\n        let checked = {\r\n            OneOrVileTasks_one: this.props.OneOrVileTasks == 'one' ? true : false,\r\n            OneOrVileTasks_vile: this.props.OneOrVileTasks == 'vile' ? true : false,\r\n            TypeDoc_contract: this.props.TypeDoc == 1 ? true : false,\r\n            TypeDoc_DS: this.props.TypeDoc == 2 ? true : false\r\n\r\n        }\r\n\r\n        let typesContract = this.props.typeContractsList.map(item => <option key={item.id} value={item.id}>{item.name}</option>)\r\n        let departmentsList = this.props.departmentsList.map(item => <option key={item.id} value={item.id}>{item.name}</option>)\r\n        //console.log(this.props.temporaryTaskDO.TypeService)\r\n        return (\r\n            <div>\r\n                <h5>Шаг.1 Документ</h5>\r\n                <hr />\r\n                <MyChekBoxKPP {...this.props} name='TypeDoc' title='Тип документа'\r\n                    onBlur={this.touched}\r\n                    validation={this.validationRequired}\r\n                    values={[\r\n                        { id: 1, name: 'Договор' },\r\n                        { id: 2, name: 'ДС' }\r\n                    ]}\r\n                    onChange={(e) => { this.toggleSelectContractForm(e); this.changeData(e); this.props.rulesStep1AC(); }}\r\n                />\r\n                <MyInputKPP {...this.props} onChange={this.changeData}\r\n                    onBlur={this.touched}\r\n                    validation={this.validationRequired}\r\n                    name='TemplateDoc' title='Номер шаблона договора (если известен)' />\r\n                <MySelectKPP {...this.props} size='10' name='TypeService' title='Вид договора'\r\n                    onChange={(e) => { this.changeData(e); this.getDepartments(e); this.props.clearRefSYAC() }}\r\n                    onBlur={this.touched}\r\n                    validation={this.validationRequired}>\r\n                    {typesContract}\r\n                </ MySelectKPP>\r\n                <MySelectKPP {...this.props} name='Dep' title='Подразделение оказывающее услуги'\r\n                    onChange={this.changeData}\r\n                    onBlur={this.touched}\r\n                    validation={this.validationRequired}>\r\n                    {departmentsList}\r\n                </ MySelectKPP>\r\n            </div>\r\n        )\r\n\r\n    }\r\n\r\n}\r\nexport default Step1","import * as axios from \"axios\"\r\n\r\n//const URL='http://localhost'\r\nconst URL='http://webdo.gk.rosatom.local/reportserver/'\r\n\r\nexport function myAxios(data={},method='POST') {\r\n    return (\r\n        axios({\r\n            withCredentials: true,\r\n            method: method,\r\n            url: 'http://localhost',\r\n            data: data\r\n        }).then(response=>response.data)\r\n    )\r\n}","import { myAxios } from \"../../dal/api\";\r\n\r\nconst TOGGLEADDSERVICEFORM = 'TOGGLEADDSERVICEFORM';\r\nconst TOGGLESELECTCONTRACTFORM = 'TOGGLESELECTCONTRACTFORM';\r\nconst CHANGEDATA = 'CHANGEDATA';\r\nconst RULESSTEP1AC = 'RULESSTEP1AC';\r\nconst CLIENTLISTSELECTED = 'CLIENTLISTSELECTED'\r\nconst SETCLIENTS = 'SETCLIENTS'\r\nconst GETTYPESCONTRACT = 'GETTYPESCONTRACT'\r\nconst GETDEPARTMENTS = 'GETDEPARTMENTS'\r\nconst SETDATANULL = 'SETDATANULL'\r\nconst GETPERIODSACT = 'GETPERIODSACT'\r\nconst GETSERVICESLIST = 'GETSERVICESLIST'\r\nconst ADDSERVICESLISTSELECTED = 'ADDSERVICESLISTSELECTED'\r\nconst DELETESERVICESLISTSELECTEDAC = 'DELETESERVICESLISTSELECTEDAC'\r\nconst GETEOSZ = 'GETEOSZ'\r\nconst DEFAULTSUBJECT = 'DEFAULTSUBJECT'\r\nconst TOGGLEADDCLIENTFORM = 'TOGGLEADDCLIENTFORM'\r\nconst GETSY = 'GETSY'\r\nconst CHECKERRORS = 'CHECKERRORS'\r\nconst CLEARDATA = 'CLEARDATA'\r\nconst CLEARREFSY = 'CLEARREFSY'\r\nconst CHANGEDATANEWCLIENT = 'CHANGEDATANEWCLIENT'\r\nconst SAVENEWCLIENT = 'SAVENEWCLIENT'\r\nconst CHANGEDATANEWSERVICE = 'CHANGEDATANEWSERVICE'\r\nconst SAVENEWSERVICE = 'SAVENEWSERVICE'\r\nconst PURENTDOCUMENT = 'PURENTDOCUMENT'\r\nconst SETCONTRACTS = 'SETCONTRACTS'\r\nconst GETLISTTASK = 'GETLISTTASK'\r\nconst CHANGEDATAFILTER = 'CHANGEDATAFILTER'\r\nconst SETTASK = 'GETTASK'\r\nconst SETCURRENTTEASK = 'SETCURRENTTEASK'\r\nconst SETSTATUSUSER = 'SETSTATUSUSER'\r\nconst SETLISTSERVICESBYGID = 'SETLISTSERVICESBYGID'\r\nconst TOUCHEDAC = 'TOUCHEDAC'\r\nconst SENDDATA = 'SENDDATA'\r\nconst SETSTATUSTASK = 'SETSTATUSTASK'\r\nconst RESETERRORS = 'RESETERRORS'\r\n\r\nexport function resetErrorsAC(params) {\r\n    //debugger\r\n    return {\r\n        type: RESETERRORS\r\n    }\r\n}\r\nexport function touchedAC(params) {\r\n    //debugger\r\n    return {\r\n        type: TOUCHEDAC,\r\n        name: params\r\n    }\r\n}\r\nexport function setListservicesByGid(params) {\r\n    return {\r\n        type: SETLISTSERVICESBYGID,\r\n        data: params\r\n    }\r\n}\r\nexport function setStatusUser(params) {\r\n    return {\r\n        type: SETSTATUSUSER,\r\n        data: params\r\n    }\r\n}\r\nexport function ChangeDataFilterAC(params) {\r\n    return {\r\n        type: CHANGEDATAFILTER,\r\n        data: params\r\n    }\r\n}\r\nexport function setPurentDocumentAC(params) {\r\n    return {\r\n        type: PURENTDOCUMENT,\r\n        data: params\r\n    }\r\n}\r\nexport function changeDataNewServiceAC(params) {\r\n    return {\r\n        type: CHANGEDATANEWSERVICE,\r\n        name: params.name,\r\n        data: params.data\r\n    }\r\n}\r\nexport function changeDataNewClientAC(params) {\r\n    return {\r\n        type: CHANGEDATANEWCLIENT,\r\n        name: params.name,\r\n        data: params.data\r\n    }\r\n}\r\nexport function clearRefSYAC(params) {\r\n    return {\r\n        type: CLEARREFSY\r\n    }\r\n}\r\nexport function checkErrorsAC(params) {\r\n    return {\r\n        type: CHECKERRORS\r\n    }\r\n}\r\nexport function defaultSubjectAC(params) {\r\n    return {\r\n        type: DEFAULTSUBJECT\r\n    }\r\n}\r\nexport function deleteServicesListSelectedAC(params) {\r\n    return {\r\n        type: DELETESERVICESLISTSELECTEDAC,\r\n        id: params.id\r\n    }\r\n}\r\nexport function addServicesListSelectedAC(params) {\r\n    return {\r\n        type: ADDSERVICESLISTSELECTED,\r\n        data: {\r\n            id: params.id,\r\n            name: params.name\r\n        }\r\n    }\r\n}\r\nexport function toggleAddServiceFormAC(params) {\r\n    return {\r\n        type: TOGGLEADDSERVICEFORM\r\n    }\r\n}\r\nexport function toggleAddClientFormAC(params) {\r\n    return {\r\n        type: TOGGLEADDCLIENTFORM\r\n    }\r\n}\r\nexport function toggleSelectContractFormAC(params) {\r\n    return {\r\n        type: TOGGLESELECTCONTRACTFORM,\r\n        data: params\r\n    }\r\n}\r\nexport function changeDataAC(params) {\r\n    //debugger;\r\n    return {\r\n        type: CHANGEDATA,\r\n        name: params.name,\r\n        data: params.data\r\n    }\r\n}\r\nexport function clearDataAC(params) {\r\n    return {\r\n        type: CLEARDATA,\r\n        name: params.name\r\n    }\r\n}\r\nexport function rulesStep1AC(params) {\r\n    return { type: RULESSTEP1AC }\r\n}\r\nfunction setDataNullAC(d) {\r\n    return {\r\n        type: SETDATANULL,\r\n        data: d\r\n    }\r\n}\r\nfunction setCurrentTeask(params) {\r\n    return {\r\n        type: SETCURRENTTEASK,\r\n        data: params\r\n    }\r\n}\r\nexport function setSelectedClientDataAC(params) {\r\n\r\n    return {\r\n        type: CLIENTLISTSELECTED,\r\n        data: {\r\n            id: params.id\r\n        }\r\n    }\r\n}\r\nfunction getDepartmentsAC(d) {\r\n    return { type: GETDEPARTMENTS, data: d }\r\n}\r\nexport function sendDataAC() {\r\n    //debugger;\r\n    return {\r\n        type: SENDDATA,\r\n    }\r\n}\r\nexport function saveNewClient(state) {\r\n    var jsonState = JSON.stringify(state)\r\n    return dispatch =>\r\n        myAxios({ newClient: jsonState }).then(data => {\r\n            //console.log(data)\r\n            dispatch({\r\n                type: SAVENEWCLIENT,\r\n                data: data[0]\r\n            })\r\n        }\r\n        )\r\n}\r\nexport function saveNewService(state) {\r\n    var jsonState = JSON.stringify(state)\r\n    return dispatch =>\r\n        myAxios({ newService: jsonState }).then(data => {\r\n            //console.log(data)\r\n            dispatch({\r\n                type: SAVENEWSERVICE,\r\n                data: data[0]\r\n            })\r\n        }\r\n        )\r\n}\r\nexport function getListservicesByGid(gid) {\r\n    //debugger;\r\n    return dispatch => {\r\n        myAxios({ getListservicesByGid: 'getListservicesByGid', gid: gid }).then(data => {\r\n            //debugger;\r\n            dispatch(setListservicesByGid(data))\r\n        }\r\n        )\r\n    }\r\n}\r\nexport function gotoWork(params) {\r\n    //debugger;\r\n    return dispatch => {\r\n        dispatch({\r\n            type: SETSTATUSTASK,\r\n            data: 1\r\n        });\r\n        dispatch(checkErrorsAC())\r\n        dispatch(sendDataAC())\r\n    }\r\n}\r\nexport function cancelTask(params) {\r\n    //debugger;\r\n    return dispatch => {\r\n        dispatch({\r\n            type: SETSTATUSTASK,\r\n            data: -1\r\n        });\r\n        dispatch(checkErrorsAC())\r\n        dispatch(sendDataAC())\r\n    }\r\n}\r\nexport function getStatusUser() {\r\n    //debugger;\r\n    return dispatch => {\r\n        myAxios({ getStatusUser: 'getStatusUser' }).then(data =>\r\n            dispatch(setStatusUser(data))\r\n        )\r\n    }\r\n}\r\nexport function getuserdata() {\r\n    //debugger;\r\n    return dispatch => {\r\n        myAxios({ getuserdata: 'getuserdata' }).then(data =>\r\n            console.log(data)\r\n            /* dispatch({\r\n                type: SETTASK,\r\n                data: data\r\n            }) */\r\n        )\r\n    }\r\n}\r\nexport function getTask(idTask = null) {\r\n    //debugger;\r\n    return dispatch => {\r\n        dispatch(setCurrentTeask(idTask));\r\n        myAxios({ getTask: 'getTask', idTask: idTask }).then(data =>\r\n            dispatch({\r\n                type: SETTASK,\r\n                data: data\r\n            })\r\n        )\r\n    }\r\n}\r\nexport function getEOSZ() {\r\n    return dispatch =>\r\n        myAxios({ getEOSZ: 'getEOSZ' }).then(data =>\r\n            dispatch({\r\n                type: GETEOSZ,\r\n                data: data\r\n            })\r\n        )\r\n}\r\nexport function getListTask(filter = null) {\r\n    //debugger\r\n    return dispatch =>\r\n        myAxios({ getListTask: 'getListTask', filter }).then(data =>\r\n            dispatch({\r\n                type: GETLISTTASK,\r\n                data: data\r\n            })\r\n        )\r\n}\r\nexport function getContracts(GID, idTypeContract) {\r\n    //debugger;\r\n    return dispatch =>\r\n        myAxios({ getContracts: 'getContracts', GID: GID, idTypeContract: idTypeContract }).then(data =>\r\n            dispatch({\r\n                type: SETCONTRACTS,\r\n                data: data\r\n            })\r\n        )\r\n}\r\nexport function getSY(n) {\r\n    return dispatch =>\r\n        myAxios({ getSY: n }).then(data =>\r\n            dispatch({\r\n                type: GETSY,\r\n                data: data\r\n            })\r\n        )\r\n}\r\nexport function getPeriodsAct() {\r\n    return dispatch =>\r\n        myAxios({ getPeriodsAct: 'getPeriodsAct' }).then(data =>\r\n            dispatch({\r\n                type: GETPERIODSACT,\r\n                data: data\r\n            })\r\n        )\r\n}\r\nexport function getServices(name = null) {\r\n    return dispatch =>\r\n        myAxios({ getServices: 'getServices', name: name }).then(data => {\r\n            //console.log(data)\r\n            dispatch({\r\n                type: GETSERVICESLIST,\r\n                data: data\r\n            })\r\n        }\r\n        )\r\n}\r\nexport function getClients(gid = null, name = null) {\r\n    return dispatch =>\r\n        myAxios({ getClients: 'getClients', gid: gid, name: name }).then(data => {\r\n            //console.log(data)\r\n            dispatch({\r\n                type: SETCLIENTS,\r\n                data: data\r\n            })\r\n        }\r\n        )\r\n}\r\nexport function getTypesContract() {\r\n    return dispatch =>\r\n        myAxios({ gettypesContract: 'gettypesContract' }).then(data =>\r\n            dispatch({\r\n                type: GETTYPESCONTRACT,\r\n                data: data\r\n            })\r\n        )\r\n}\r\nexport function getDepartments(filter, markSetNull = false) {\r\n    return dispatch => {\r\n        if (markSetNull) dispatch(setDataNullAC('Dep'))\r\n        myAxios({ getdepartments: 'getdepartments', filter }).then(data =>\r\n            dispatch(getDepartmentsAC(data))\r\n        )\r\n    }\r\n}\r\n\r\nfunction objError(params) {\r\n    return {\r\n        step: params,\r\n        touched: false,\r\n        error: true\r\n    }\r\n}\r\n\r\nlet initialState = {\r\n    listUsersPP: [{\r\n        id: '1',\r\n        name: 'KPP'\r\n    },\r\n    {\r\n        id: '2',\r\n        name: 'TDI'\r\n    }],\r\n    statusUser: '',\r\n    addClient: {\r\n        inn: '',\r\n        gid: '',\r\n        name: '',\r\n        contects: ''\r\n    },\r\n    addService: {\r\n        department: '',\r\n        groupService: '',\r\n        manager: '',\r\n        codeService: '',\r\n        nameService: '',\r\n        typeService: '',\r\n        nomenclatureGroup: '',\r\n        measurement: ''\r\n    },\r\n    contracts: [{\r\n        id: '123',\r\n        numberContract: '1234',\r\n        dateContract: '1235',\r\n        subject: '1236'\r\n    },\r\n    {\r\n        id: '',\r\n        numberContract: '',\r\n        dateContract: '',\r\n        subject: ''\r\n    }],\r\n    listServicesByGid: [{\r\n        idDocument: '',\r\n        codeService: '',\r\n        numDoc: '',\r\n        statusDoc: '',\r\n        dateBegeen: '',\r\n        dateEnd: ''\r\n    }],\r\n    filterListTask: {\r\n        idtask: '',\r\n        dateTask: '',\r\n        authorTask: '',\r\n        statusTask: '',\r\n        datelastiteration: '',\r\n        idpk: '',\r\n        managerDO: '',\r\n        department: '',\r\n        typedoc: '',\r\n        GID: '',\r\n        nameClient: '',\r\n        subjectTask: '',\r\n        comment: ''\r\n    },\r\n    listTasks: [\r\n        {\r\n            idtask: '',\r\n            dateTask: '',\r\n            authorTask: '',\r\n            statusTask: '',\r\n            datelastiteration: '',\r\n            idpk: '',\r\n            managerDO: '',\r\n            department: '',\r\n            typedoc: '',\r\n            GID: '',\r\n            nameClient: '',\r\n            subjectTask: '',\r\n            comment: ''\r\n        }\r\n    ],\r\n    departmentsList: [],\r\n    typeContractsList: [],\r\n    clientsList: [],\r\n    ClientListSelected: [],\r\n    servicesList: [],\r\n    servicesListSelected: [],\r\n    EOSZList: [],\r\n    periodsActList: [],\r\n    templateFiles: {},\r\n    toggleForms: {\r\n        addServiceForm: false,\r\n        addServiceForm: false,\r\n        selectContractForm: false\r\n    },\r\n    refSY: [{\r\n        ref: null,\r\n        name: null\r\n    }],\r\n    errors:\r\n    {\r\n        totalError: false,\r\n        allInputs: [\r\n            'TypeDoc',\r\n            'TypeService',\r\n            'Dep',\r\n            'MainCP',\r\n            'PerActService',\r\n            'DateStart',\r\n            'DateEnd',\r\n            'DateText',\r\n            'SubjectContract',\r\n            'FileSU',\r\n            'signerClient',\r\n            'ContactsCp',\r\n            'ContactManagerGA'\r\n        ],\r\n        ID: objError(0),\r\n        IdAuthor: objError(0),\r\n        DateTask: objError(0),\r\n        TypeTask: objError(0),\r\n        OneOrVileTasks: objError(1),\r\n        NumberParentTask: objError(0),\r\n        TypeDoc: objError(1),\r\n        num_doc_parent: objError(0),\r\n        TemplateDoc: objError(1),\r\n        Dep: objError(1),\r\n        TypeService: objError(1),\r\n        MainCP: objError(2),\r\n        BranchCP: objError(0),\r\n        TypePerActService: objError(0),\r\n        PerActService: objError(3),\r\n        DateStart: objError(3),\r\n        DateEnd: objError(3),\r\n        DateText: objError(3),\r\n        Services: objError(3),\r\n        EOSZ: objError(3),\r\n        SubjectContract: objError(3),\r\n        ContactManagerGA: objError(5),\r\n        AdditionalConditional: objError(3),\r\n        ContactsCp: objError(5),\r\n        FileSU: objError(4),\r\n        FilePrice: objError(4),\r\n        FileEdit: objError(4),\r\n        FileApplication: objError(4),\r\n        FileUS: objError(4),\r\n        FileOther: objError(4),\r\n        CommentCD: objError(3),\r\n        signerClient: objError(5),\r\n        systemsClient: objError(5),\r\n        Active: objError(0),\r\n        PDNBool: objError(5),\r\n        boxServiceBool: objError(5),\r\n        coExecutorBool: objError(5),\r\n        RIDBool: objError(5),\r\n        startInPastBool: objError(5),\r\n        worcClientAreaBool: objError(5),\r\n        TransferAreaBool: objError(5),\r\n        TransferToolsBool: objError(5)\r\n    },\r\n    currentTeask: '123',\r\n    temporaryTaskDO:\r\n    {\r\n        ID: '',\r\n        IDPK: '',\r\n        statusTask: '',\r\n        IdAuthor: '',\r\n        DateTask: '',\r\n        TypeTask: '',\r\n        OneOrVileTasks: 'one',\r\n        NumberParentTask: '',\r\n        TypeDoc: '',\r\n        num_doc_parent: {\r\n            id: 123,\r\n            number: '22/12336-Д'\r\n        },\r\n        TemplateDoc: '',\r\n        Dep: '',\r\n        TypeService: '',\r\n        MainCP: '',\r\n        BranchCP: '',\r\n        TypePerActService: '',\r\n        PerActService: '',\r\n        DateStart: '',\r\n        DateEnd: '',\r\n        DateText: '',\r\n        Services: '',\r\n        EOSZ: '',\r\n        SubjectContract: '',\r\n        ContactManagerGA: '',\r\n        AdditionalConditional: '',\r\n        signerClient: '',\r\n        systemsClient: '',\r\n        ContactsCp: '',\r\n        PDNBool: 0,\r\n        boxServiceBool: 0,\r\n        coExecutorBool: 0,\r\n        RIDBool: 0,\r\n        startInPastBool: 0,\r\n        worcClientAreaBool: 0,\r\n        TransferAreaBool: 0,\r\n        TransferToolsBool: 0,\r\n        FileSU: '',\r\n        FilePrice: '',\r\n        FileEdit: '',\r\n        FileApplication: '',\r\n        FileUS: '',\r\n        FileOther: '',\r\n        aditionalFilesDO: '',\r\n        CommentCD: '',\r\n        Active: ''\r\n    }\r\n};\r\n\r\nfunction TaskDOReducer(state = initialState, action) {\r\n\r\n    switch (action.type) {\r\n        case RESETERRORS:\r\n            //debugger\r\n            var newObj = {}\r\n            Object.keys(state.errors).forEach(item => {\r\n                if (item != 'allInputs') {\r\n                    newObj[item] = {\r\n                        ...state.errors[item],\r\n                        touched: false,\r\n                        error: true\r\n                    }\r\n                }\r\n            })\r\n            console.log(state.errors)\r\n            console.log({\r\n                ...state,\r\n                errors: {\r\n                    ...state.errors,\r\n                    totalError: false,\r\n                    ...newObj\r\n                }\r\n            })\r\n            return {\r\n                ...state,\r\n                errors: {\r\n                    ...state.errors,\r\n                    totalError: false,\r\n                    ...newObj\r\n                }\r\n            }\r\n        case SETSTATUSTASK:\r\n            return {\r\n                ...state,\r\n                temporaryTaskDO: {\r\n                    ...state.temporaryTaskDO,\r\n                    statusTask: action.data\r\n                }\r\n            }\r\n        case SENDDATA:\r\n            //console.log(state.errors.totalError)\r\n            //debugger\r\n            if (!state.errors.totalError) {\r\n                myAxios({ senddata: 'senddata', data: state.temporaryTaskDO }).then(data => {\r\n                    return {\r\n                        ...state,\r\n                        temporaryTaskDO: { ...data }\r\n                    }\r\n                }\r\n                )\r\n            }\r\n            return state\r\n        case TOUCHEDAC:\r\n            //debugger;\r\n            return {\r\n                ...state,\r\n                errors: {\r\n                    ...state.errors,\r\n                    [action.name]: {\r\n                        ...state.errors[action.name],\r\n                        touched: true\r\n                    }\r\n                }\r\n            }\r\n        case SETLISTSERVICESBYGID:\r\n            //debugger\r\n            return {\r\n                ...state,\r\n                listServicesByGid: [...action.data]\r\n            }\r\n        case SETSTATUSUSER:\r\n            return {\r\n                ...state,\r\n                statusUser: action.data\r\n            }\r\n        case SETCURRENTTEASK:\r\n            return {\r\n                ...state,\r\n                currentTeask: action.data\r\n            }\r\n        case SETTASK:\r\n            return {\r\n                ...state,\r\n                temporaryTaskDO: { ...action.data }\r\n            }\r\n        case CHANGEDATAFILTER: {\r\n            return {\r\n                ...state,\r\n                filterListTask: {\r\n                    ...state.filterListTask,\r\n                    [action.data.name]: action.data.data\r\n                }\r\n            }\r\n        }\r\n        case GETLISTTASK:\r\n            //debugger\r\n            return {\r\n                ...state,\r\n                listTasks: [...action.data]\r\n            }\r\n        case SETCONTRACTS:\r\n            return {\r\n                ...state,\r\n                contracts: [...action.data]\r\n            }\r\n        case PURENTDOCUMENT:\r\n            return {\r\n                ...state,\r\n                temporaryTaskDO: {\r\n                    ...state.temporaryTaskDO,\r\n                    num_doc_parent: {\r\n                        id: action.data.id,\r\n                        number: action.data.number\r\n                    }\r\n                }\r\n            }\r\n        case SAVENEWSERVICE:\r\n            //debugger;\r\n            return {\r\n                ...state,\r\n                addService: { ...action.data },\r\n                servicesListSelected: [...state.servicesListSelected,\r\n                {\r\n                    id: 0,\r\n                    name: action.data.nameService\r\n                }]\r\n            };\r\n        case SAVENEWCLIENT:\r\n            return {\r\n                ...state,\r\n                addClient: { ...action.data },\r\n                temporaryTaskDO: {\r\n                    ...state.temporaryTaskDO,\r\n                    MainCP: [...state.temporaryTaskDO.MainCP, action.data.gid]\r\n                },\r\n                ClientListSelected: [{\r\n                    id: action.data.gid,\r\n                    name: action.data.name\r\n                }]\r\n            };\r\n        case CHECKERRORS:\r\n            //debugger;\r\n            var newState = {\r\n                ...state,\r\n                errors: { ...state.errors }\r\n            }\r\n            var totalError = false;\r\n            let checkArr = [...state.errors.allInputs]\r\n            checkArr.forEach(item => {\r\n                if (!state.temporaryTaskDO[item]) {\r\n                    newState.errors[item] = {\r\n                        ...newState.errors[item],\r\n                        error: true,\r\n                        touched: true\r\n                    }\r\n                    totalError = true\r\n                }\r\n            })\r\n            newState.errors.totalError = totalError;\r\n            /* if(!state.temporaryTaskDO.TypeDoc)console.log('hello')\r\n            console.log(state.temporaryTaskDO) */\r\n            return newState;\r\n        case GETSY:\r\n            return {\r\n                ...state,\r\n                refSY: { ...action.data }\r\n            };\r\n        case CHANGEDATANEWSERVICE:\r\n            return {\r\n                ...state,\r\n                addService: {\r\n                    ...state.addService,\r\n                    [action.name]: action.data\r\n                }\r\n            };\r\n        case CHANGEDATANEWCLIENT:\r\n            return {\r\n                ...state,\r\n                addClient: {\r\n                    ...state.addClient,\r\n                    [action.name]: action.data\r\n                }\r\n            };\r\n        case CLEARREFSY:\r\n            return {\r\n                ...state,\r\n                refSY: [{\r\n                    ref: null,\r\n                    name: null\r\n                }]\r\n            };\r\n        case DEFAULTSUBJECT:\r\n            var newSubject = '';\r\n            state.servicesListSelected.forEach(item => newSubject += newSubject ? \", \" + item.name : item.name)\r\n            var errMark = newSubject ? false : true;\r\n            return {\r\n                ...state,\r\n                temporaryTaskDO: {\r\n                    ...state.temporaryTaskDO,\r\n                    SubjectContract: newSubject\r\n                },\r\n                errors: {\r\n                    ...state.errors,\r\n                    SubjectContract: {\r\n                        ...state.errors.SubjectContract,\r\n                        error: errMark\r\n                    }\r\n\r\n                }\r\n            };\r\n        case DELETESERVICESLISTSELECTEDAC:\r\n            var newState = {\r\n                ...state,\r\n                servicesListSelected: [...state.servicesListSelected]\r\n            }\r\n            var delid = newState.servicesListSelected.findIndex(item => item.id == action.id)\r\n            newState.servicesListSelected.splice(delid, 1);\r\n            return newState\r\n        case ADDSERVICESLISTSELECTED:\r\n            var elem = state.servicesList.find(item => item.id == action.data.id)\r\n            return {\r\n                ...state,\r\n                servicesListSelected: [{ ...elem }, ...state.servicesListSelected],\r\n                errors: {\r\n                    ...state.errors,\r\n                    Services: false\r\n                }\r\n            };\r\n        case GETEOSZ:\r\n            return {\r\n                ...state,\r\n                EOSZList: [...action.data]\r\n            };\r\n        case GETSERVICESLIST:\r\n            return {\r\n                ...state,\r\n                servicesList: [...action.data]\r\n            };\r\n        case GETPERIODSACT:\r\n            return {\r\n                ...state,\r\n                periodsActList: [...action.data]\r\n            };\r\n        case SETCLIENTS:\r\n            return {\r\n                ...state,\r\n                clientsList: [...action.data]\r\n            };\r\n        case SETDATANULL:\r\n            return {\r\n                ...state,\r\n                temporaryTaskDO: {\r\n                    ...state.temporaryTaskDO,\r\n                    Dep: ''\r\n                }\r\n            };\r\n        case GETDEPARTMENTS:\r\n            return {\r\n                ...state,\r\n                departmentsList: [...action.data]\r\n            };\r\n        case GETTYPESCONTRACT:\r\n            return {\r\n                ...state,\r\n                typeContractsList: [...action.data]\r\n            };\r\n        case CLIENTLISTSELECTED:\r\n            //debugger;\r\n            var elem = state.clientsList.find(item => item.id == action.data.id)\r\n            return {\r\n                ...state,\r\n                ClientListSelected: [{ ...elem }]\r\n            };\r\n        case RULESSTEP1AC:\r\n            var OneOrVileTasks = state.temporaryTaskDO.TypeDoc == 2 ? 'one' : state.temporaryTaskDO.OneOrVileTasks;\r\n            if (state.temporaryTaskDO.OneOrVileTasks == OneOrVileTasks) return state;\r\n\r\n            return {\r\n                ...state,\r\n                temporaryTaskDO: {\r\n                    ...state.temporaryTaskDO,\r\n                    OneOrVileTasks: OneOrVileTasks\r\n                }\r\n            };\r\n        case CHANGEDATA:\r\n            //debugger;\r\n            var errMark = action.data[0] ? false : true;\r\n            return {\r\n                ...state,\r\n                temporaryTaskDO: {\r\n                    ...state.temporaryTaskDO,\r\n                    [action.name]: action.data\r\n                },\r\n                errors: {\r\n                    ...state.errors,\r\n                    [action.name]: {\r\n                        ...state.errors[action.name],\r\n                        error: errMark\r\n                    }\r\n\r\n                }\r\n            };\r\n        case CLEARDATA:\r\n            //debugger;\r\n            var errMark = false;\r\n            return {\r\n                ...state,\r\n                temporaryTaskDO: {\r\n                    ...state.temporaryTaskDO,\r\n                    [action.name]: ''\r\n                },\r\n                errors: {\r\n                    ...state.errors,\r\n                    [action.name]: {\r\n                        ...state.errors[action.name],\r\n                        error: errMark\r\n                    }\r\n\r\n                }\r\n            };\r\n        case TOGGLEADDSERVICEFORM:\r\n            //debugger;\r\n            return {\r\n                ...state,\r\n                toggleForms: {\r\n                    ...state.toggleForms,\r\n                    addServiceForm: !state.toggleForms.addServiceForm\r\n                }\r\n            };\r\n        case TOGGLEADDCLIENTFORM:\r\n            //debugger;\r\n            return {\r\n                ...state,\r\n                toggleForms: {\r\n                    ...state.toggleForms,\r\n                    addClientForm: !state.toggleForms.addClientForm\r\n                }\r\n            };\r\n        case TOGGLESELECTCONTRACTFORM:\r\n            //debugger;\r\n            return {\r\n                ...state,\r\n                toggleForms: {\r\n                    ...state.toggleForms,\r\n                    selectContractForm: action.data\r\n                }\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport default TaskDOReducer;","import Step1 from \"./step1\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router\";\r\nimport { compose } from \"redux\";\r\nimport {\r\n    toggleSelectContractFormAC, changeDataAC, rulesStep1AC,\r\n    getTypesContract, getDepartments, clearRefSYAC, getTask,getuserdata,touchedAC\r\n} from \"../../../redux/reducers/reducer_taskDO\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    //debugger;\r\n    return {\r\n        selectContractFormToggle: state.TaskDOForm.toggleForms.selectContractForm,\r\n        OneOrVileTasks: state.TaskDOForm.temporaryTaskDO.OneOrVileTasks,\r\n        TypeDoc: state.TaskDOForm.temporaryTaskDO.TypeDoc,\r\n        TemplateDoc: state.TaskDOForm.temporaryTaskDO.TemplateDoc,\r\n        TypeService: state.TaskDOForm.temporaryTaskDO.TypeService,\r\n        Dep: state.TaskDOForm.temporaryTaskDO.Dep,\r\n        temporaryTaskDO: state.TaskDOForm.temporaryTaskDO,\r\n        typeContractsList: state.TaskDOForm.typeContractsList,\r\n        departmentsList: state.TaskDOForm.departmentsList,\r\n        errors: state.TaskDOForm.errors,\r\n        currentTeask: state.TaskDOForm.currentTeask\r\n\r\n    }\r\n}\r\n\r\nlet Step1Container = compose(\r\n    connect(mapStateToProps,\r\n        { toggleSelectContractFormAC, changeDataAC, rulesStep1AC, \r\n            getTypesContract, getDepartments, clearRefSYAC, getTask,getuserdata,touchedAC }),\r\n    withRouter\r\n)(Step1);\r\n\r\nexport default Step1Container","import React, { Component } from 'react';\r\n\r\nclass SelectContract extends Component {\r\n    selectContract = (e) => {\r\n        e.preventDefault();\r\n        //alert(e.target.firstChild.data.trim())\r\n        this.props.setPurentDocumentAC({\r\n            id: e.target.getAttribute('data-id'),\r\n            number: e.target.firstChild.data.trim()\r\n        })\r\n    }\r\n    componentDidMount() {\r\n        this.props.getContracts(this.props.MainCP[0],this.props.TypeService)\r\n    }\r\n\r\n    render() {\r\n        //console.log(this.props)\r\n        let rows = this.props.contracts.map(item =>\r\n            <tr key={item.id}>\r\n                <th scope=\"row\">\r\n                    <a href='#' data-id={item.id} onClick={this.selectContract}>{item.numberContract}</a>\r\n                </th>\r\n                <td>{item.dateContract}</td>\r\n                <td>{item.subject}</td>\r\n            </tr>)\r\n        \r\n        return (\r\n            <div>\r\n                <div className=\"form-group\">\r\n                    <label><h6>Договор выбран:</h6></label>\r\n                    <input\r\n                        type=\"text\" className=\"form-control\" data-idparent={this.props.num_doc_parent.id}\r\n                        value={this.props.num_doc_parent.number}\r\n                        readOnly={true} />\r\n                </div>\r\n                <div>\r\n                    <label><h6>Выбор договора (для ДС):</h6></label>\r\n                    <table className=\"table table-sm\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th scope=\"col\">№ Договора</th>\r\n                                <th scope=\"col\">Дата договора</th>\r\n                                <th scope=\"col\">Предмет договора</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {rows}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default SelectContract","import SelectContract from \"./selectContract\";\r\nimport { connect } from \"react-redux\";\r\nimport { setPurentDocumentAC,getContracts } from \"../../../redux/reducers/reducer_taskDO\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    //debugger;\r\n    return {\r\n        num_doc_parent: state.TaskDOForm.temporaryTaskDO.num_doc_parent,\r\n        contracts: state.TaskDOForm.contracts,\r\n        TypeService: state.TaskDOForm.temporaryTaskDO.TypeService,\r\n        MainCP: state.TaskDOForm.temporaryTaskDO.MainCP\r\n    }\r\n}\r\n\r\nlet SelectContractContainer = connect(mapStateToProps, \r\n    {setPurentDocumentAC,getContracts})(SelectContract);\r\nexport default SelectContractContainer\r\n","import { MyInput, MyTextArea, MySelect } from \"../inputs/inputs\";\r\nimport { Form, Field } from 'react-final-form'\r\n\r\nfunction AddClientForm(props) {\r\n    //debugger;\r\n\r\n    function saveNewClient() {\r\n        props.saveNewClient(props.addClient)\r\n    }\r\n\r\n    const onSubmit = values => {\r\n        props.saveNewClient(values)\r\n    }\r\n    console.log(props);\r\n    return (\r\n        <Form\r\n            onSubmit={onSubmit}\r\n            validate={values => {\r\n                let requiredText = 'Обязательное поле для заполнения.';\r\n                const errors = {}\r\n                //console.log(Object.keys(values));\r\n                let requireditems = [\r\n                    \"inn\",\r\n                    \"gid\",\r\n                    \"name\",\r\n                    \"contects\"\r\n                ]\r\n                requireditems.forEach(item => { if (!values[item]) errors[item] = requiredText })\r\n                return errors\r\n            }}\r\n            initialValues={props.addClient}\r\n            render={({ handleSubmit, form, submitting, pristine, values }) => (\r\n                <form onSubmit={handleSubmit}>\r\n                    <div className='alert alert-light'>\r\n                        <div className=\"form-group\">\r\n                            <label><h6 className='text-body'>ИНН:</h6></label>\r\n                            <Field type='number' name='inn' component={MyInput} />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label><h6 className='text-body'>GID:</h6></label>\r\n                            <Field type='number' name='gid' component={MyInput} />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label><h6 className='text-body'>Наименование контрагента:</h6></label>\r\n                            <Field rows='3' name='name' component={MyTextArea} />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label><h6 className='text-body'>Контактное лицо со стороны заказчика:</h6></label>\r\n                            <Field rows='3' name='contects' component={MyTextArea} />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label><h6>Карточка контрагента:</h6></label>\r\n                            <a href=\"#\" className='btn btn-light d-block text-left' download>Карточка контрагента</a>\r\n                        </div>\r\n                        <button type='submit' className='btn btn-primary w-100'>Направить</button>\r\n                    </div>\r\n                </form>\r\n            )}\r\n        />)\r\n}\r\nexport default AddClientForm","import AddClient from \"./addClient\";\r\nimport { connect } from \"react-redux\";\r\nimport { changeDataNewClientAC,saveNewClient } from \"../../../redux/reducers/reducer_taskDO\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    //debugger;\r\n    return {\r\n        addClient: state.TaskDOForm.addClient\r\n    }\r\n}\r\n\r\n\r\nlet AddClientContainer = withChangeDataNewClient(connect(mapStateToProps,{saveNewClient})(AddClient));\r\nexport default AddClientContainer\r\n\r\nfunction withChangeDataNewClient(component){\r\n    let changeData= (e)=>{\r\n        //debugger;\r\n        return changeDataNewClientAC({\r\n            name: e.target.getAttribute('data-name'),\r\n            data: e.target.value\r\n        })\r\n    }\r\n    let withChangeDataNewClientMapStateToProps = (state) => {\r\n        return {}\r\n    }\r\n    \r\n    return connect(withChangeDataNewClientMapStateToProps,{changeData})(component);\r\n}\r\n","import SelectContractContainer from \"../changs/selectContractContainer\";\r\nimport AddClientContainer from \"../changs/addClientContainer\";\r\nimport React from \"react\"\r\nimport { MySelectKPP } from \"../inputs/inputs\";\r\n\r\n\r\nclass Step2 extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.changeData = this.changeData.bind(this)\r\n        this.filterClientGID = this.filterClientGID.bind(this)\r\n        this.filterClientName = this.filterClientName.bind(this)\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.getClients();\r\n        let urlIdTask = this.props.match.params.idtask;\r\n        if (urlIdTask &&\r\n            urlIdTask != this.props.currentTeask) this.props.getTask(urlIdTask)\r\n    }\r\n\r\n    filterClientGID(e) {\r\n        if (e.key == 'Enter') {\r\n            this.props.getClients(e.target.value);\r\n        }\r\n    }\r\n\r\n    filterClientName(e) {\r\n        if (e.key == 'Enter') {\r\n            this.props.getClients(null, e.target.value);\r\n        }\r\n    }\r\n\r\n    changeData(e) {\r\n        this.props.changeDataAC({\r\n            name: e.target.getAttribute('data-name'),\r\n            data: [e.target.value]\r\n        })\r\n        this.props.setSelectedClientDataAC({\r\n            id: e.target.value\r\n        })\r\n    }\r\n    getContracts = (e) => {\r\n        this.props.getContracts(e.target.value, this.props.TypeService)\r\n    }\r\n    getListservicesByGid = (e) => {\r\n        if (this.props.statusUser == 'admin') {\r\n            this.props.getListservicesByGid(e.target.value);\r\n        }\r\n    }\r\n    touched = (name) => {\r\n        //debugger\r\n        return () => this.props.touchedAC(name)\r\n    }\r\n\r\n    validationRequired = (name) => {\r\n        //debugger\r\n        var find = !(this.props.errors.allInputs.findIndex(item => item == name) == -1)\r\n        return find && this.props.errors[name].touched && this.props.errors[name].error\r\n        \r\n    }\r\n\r\n    render() {\r\n        let valClient='';\r\n        if(this.props.ClientListSelected[0]){\r\n            valClient=this.props.ClientListSelected[0].name\r\n            valClient=valClient?valClient:'';\r\n        }\r\n        let arrClients = this.props.clientsList.map(item => <option key={item.id} value={item.id}>{item.name}</option>)\r\n\r\n        let selectContract = this.props.selectContractFormToggle ? <SelectContractContainer /> : <></>;\r\n        let addClientForm = this.props.addClientFormToggle ? <AddClientContainer /> : <></>;\r\n        return (\r\n            <div>\r\n                <h5>Шаг.2 Контрагент</h5>\r\n                <hr />\r\n                <div className=\"form-group\">\r\n                    <label><h6>Выберите одного контрагента</h6></label>\r\n                    <div className='row'>\r\n                        <div className='col-6'>\r\n                            <input type=\"text\" className=\"form-control\" placeholder='Поиск по GID' onKeyPress={this.filterClientGID}></ input>\r\n                        </div>\r\n                        <div className='col-6'>\r\n                            <input type=\"text\" className=\"form-control\" placeholder='Поиск по наименованию'\r\n                                onKeyPress={this.filterClientName}></ input>\r\n                        </div>\r\n                    </div>\r\n                    <MySelectKPP {...this.props} name='MainCP' title='' size='10'\r\n                        onChange={(e) => { this.changeData(e); this.getContracts(e); this.getListservicesByGid(e) }}\r\n                        onBlur={this.touched}\r\n                        validation={this.validationRequired}\r\n                    >\r\n                        {arrClients}\r\n                    </ MySelectKPP>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label><h6>КА выбран:</h6></label>\r\n                    <input\r\n                        type=\"text\" className=\"form-control\" data-idclient={this.props.MainCP[0]}\r\n                        value={valClient} readOnly={true}></ input>\r\n                </div>\r\n                <button className='btn btn-light w-100' onClick={this.props.toggleAddClientFormAC}>Запрос на добавление заказчика</button>\r\n                {addClientForm}\r\n                {selectContract}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Step2","import Step2 from \"./step2\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router\";\r\nimport { compose } from \"redux\";\r\nimport { changeDataAC, setSelectedClientDataAC, getClients,\r\n    toggleAddClientFormAC,getContracts,getTask,getListservicesByGid,touchedAC  } from \"../../../redux/reducers/reducer_taskDO\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    //debugger;\r\n    return {\r\n        selectContractFormToggle: state.TaskDOForm.toggleForms.selectContractForm,\r\n        addClientFormToggle: state.TaskDOForm.toggleForms.addClientForm,\r\n        MainCP: state.TaskDOForm.temporaryTaskDO.MainCP,\r\n        TypeService: state.TaskDOForm.temporaryTaskDO.TypeService,\r\n        ClientListSelected: state.TaskDOForm.ClientListSelected,\r\n        clientsList: state.TaskDOForm.clientsList,\r\n        errors: state.TaskDOForm.errors,\r\n        currentTeask: state.TaskDOForm.currentTeask,\r\n        statusUser: state.TaskDOForm.statusUser,\r\n        temporaryTaskDO: state.TaskDOForm.temporaryTaskDO\r\n    }\r\n}\r\n\r\nlet Step2Container = compose(\r\n    connect(mapStateToProps, \r\n        {changeDataAC, setSelectedClientDataAC, getClients,toggleAddClientFormAC,getContracts,getTask,getListservicesByGid,touchedAC }),\r\n    withRouter\r\n)(Step2)\r\n\r\nexport default Step2Container\r\n","import React, { Component } from 'react';\r\nimport { Form, Field } from 'react-final-form'\r\nimport { MyInput, MyTextArea, MySelect } from \"../inputs/inputs\";\r\n\r\n\r\nclass AddServiceForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.getTypesContract()\r\n        this.props.getDepartments()\r\n    }\r\n\r\n    onSubmit = values => {\r\n        this.props.saveNewService(values)\r\n    }\r\n    render() {\r\n        console.log(this.props)\r\n        let typesContract = this.props.typeContractsList.map(item => <option key={item.id} value={item.id}>{item.name}</option>)\r\n        let departmentsList = this.props.departmentsList.map(item => <option key={item.id} value={item.id}>{item.name}</option>)\r\n        return (\r\n            <Form\r\n                onSubmit={this.onSubmit}\r\n                validate={values => {\r\n                    let requiredText = 'Обязательное поле для заполнения.';\r\n                    const errors = {}\r\n                    //console.log(Object.keys(values));\r\n                    let requireditems = [\r\n                        \"department\",\r\n                        \"groupService\",\r\n                        \"manager\",\r\n                        \"codeService\",\r\n                        \"nameService\",\r\n                        \"typeService\",\r\n                        \"nomenclatureGroup\",\r\n                        \"measurement\"\r\n                    ]\r\n                    requireditems.forEach(item => {if(!values[item]) errors[item]=requiredText})\r\n                    return errors\r\n                }}\r\n                initialValues={this.props.addService}\r\n                render={({ handleSubmit, form, submitting, pristine, values }) => (\r\n                    <form onSubmit={handleSubmit}>\r\n                        <div className=\"form-group\">\r\n                            <label><h6 className='text-body'>Подразделение, оказывающее услугу:</h6></label>\r\n                            <Field name=\"department\" component={MySelect}>\r\n                                <option value={null}></option>\r\n                                {departmentsList}\r\n                            </Field>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label><h6 className='text-body'>Группа услуг:</h6></label>\r\n                            <Field name=\"groupService\" type='text' component={MyInput} />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label><h6 className='text-body'>Менеджер услуги:</h6></label>\r\n                            <Field name=\"manager\" type='text' component={MyInput} />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label><h6 className='text-body'>Код услуги/проекта:</h6></label>\r\n                            <Field name=\"codeService\" type='text' component={MyInput} />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label><h6 className='text-body'>Наименование услуги:</h6></label>\r\n                            <Field name=\"nameService\" rows=\"3\" component={MyTextArea} />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label><h6 className='text-body'>Вид договора:</h6></label>\r\n                            <Field name=\"typeService\" component={MySelect}>\r\n                                <option value={null}></option>\r\n                                {typesContract}\r\n                            </Field>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label><h6 className='text-body'>Номенклатурная группа:</h6></label>\r\n                            <Field name=\"nomenclatureGroup\" type='text' component={MyInput} />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label><h6 className='text-body'>Единица измерения услуги:</h6></label>\r\n                            <Field name=\"measurement\" type='text' component={MyInput} />\r\n                        </div>\r\n                        <button className='btn btn-primary w-100' disabled={submitting}>Направить</button>\r\n                    </form>\r\n                )}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nexport default AddServiceForm;","import AddService from \"./addService\";\r\nimport { connect } from \"react-redux\";\r\nimport { changeDataNewServiceAC, saveNewService,getTypesContract,getDepartments } from \"../../../redux/reducers/reducer_taskDO\";\r\nimport { compose } from \"redux\";\r\n\r\nfunction withChangeDataNewService(component){\r\n    let changeData= (e)=>{\r\n        //debugger;\r\n        return changeDataNewServiceAC({\r\n            name: e.target.getAttribute('data-name'),\r\n            data: e.target.value\r\n        })\r\n    }\r\n    let withChangeDataNewClientMapStateToProps = (state) => {\r\n        return {}\r\n    }\r\n    \r\n    return connect(withChangeDataNewClientMapStateToProps,{changeData})(component);\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        addService: state.TaskDOForm.addService,\r\n        typeContractsList: state.TaskDOForm.typeContractsList,\r\n        departmentsList: state.TaskDOForm.departmentsList\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps,{saveNewService,getTypesContract,getDepartments}), \r\n    withChangeDataNewService\r\n)(AddService)","import React from \"react\";\r\nimport AddServiceForm from \"../changs/addServiceContainer\";\r\nimport style from \"./step3.module.css\";\r\nimport { MySelectKPP, MyInputKPP, MyChekBoxKPP, MyTextAreaKPP } from \"../inputs/inputs\";\r\n\r\nclass Step3 extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.changeData = this.changeData.bind(this)\r\n        this.addServicesListSelected = this.addServicesListSelected.bind(this)\r\n        this.deleteServicesListSelected = this.deleteServicesListSelected.bind(this)\r\n        this.defaultSubject = this.defaultSubject.bind(this)\r\n        this.filterServices = this.filterServices.bind(this)\r\n    }\r\n    filterServices(e) {\r\n        if (e.key == 'Enter') {\r\n            this.props.getServices(e.target.value);\r\n        }\r\n    }\r\n    defaultSubject(e) {\r\n        e.preventDefault();\r\n        this.props.defaultSubjectAC();\r\n    }\r\n    deleteServicesListSelected(e) {\r\n        //console.log(e.target.getAttribute('data-id'));\r\n        this.props.deleteServicesListSelectedAC({\r\n            id: e.target.getAttribute('data-id')\r\n        })\r\n    }\r\n    componentDidMount() {\r\n        this.props.getPeriodsAct();\r\n        this.props.getServices();\r\n        this.props.getEOSZ();\r\n        let urlIdTask = this.props.match.params.idtask;\r\n        if (urlIdTask &&\r\n            urlIdTask != this.props.currentTeask) this.props.getTask(urlIdTask)\r\n    }\r\n    addServicesListSelected(e) {\r\n        this.props.addServicesListSelectedAC({\r\n            id: e.target.value,\r\n            data: e.target.value\r\n        })\r\n    }\r\n    changeData(e) {\r\n        this.props.changeDataAC({\r\n            name: e.target.getAttribute('data-name'),\r\n            data: e.target.value\r\n        })\r\n    }\r\n    validationRequired = (name) => {\r\n        //debugger\r\n        var find = !(this.props.errors.allInputs.findIndex(item => item == name) == -1)\r\n        return find && this.props.errors[name].touched && this.props.errors[name].error\r\n    }\r\n    touched = (name) => {\r\n        //debugger\r\n        return () => this.props.touchedAC(name)\r\n    }\r\n\r\n    render() {\r\n        let addServiceForm = this.props.addServiceFormToggle ? <AddServiceForm /> : <></>;\r\n        let peridsAct = this.props.periodsActList.map(item => <option key={item.id} value={item.id}>{item.name}</option>)\r\n        let servicesList = this.props.servicesList.map(item => <option key={item.id} value={item.id}>{item.name}</option>)\r\n        let selectedServices = this.props.servicesListSelected.map(item =>\r\n            <p className='m-0'>{item.name}<span className='finger'\r\n                data-id={item.id}\r\n                onClick={this.deleteServicesListSelected}>&#10060;</span></p>)\r\n        //console.log(this.props)\r\n        let addBtn = <a href='#' className='float-right' onClick={this.defaultSubject}>Заполнить по умолчанию</ a>\r\n        return (\r\n            <div>\r\n                <h5>Шаг.3 Услуги</h5>\r\n                <hr />\r\n                <MySelectKPP {...this.props} name='PerActService' title='Периодичность актирования'\r\n                    onChange={this.changeData}\r\n                    onBlur={this.touched}\r\n                    validation={this.validationRequired}>\r\n                    {peridsAct}\r\n                </MySelectKPP>\r\n\r\n                <div className='row align-items-start mx-0'>\r\n                    <div className='d-inline-block'>\r\n                        <MyInputKPP {...this.props} type='date' name='DateStart' title='Начало оказания услуг'\r\n                            onChange={this.changeData}\r\n                            onBlur={this.touched}\r\n                            validation={this.validationRequired} />\r\n                    </div>\r\n                    <div className='d-inline-block ml-2'>\r\n                        <MyInputKPP {...this.props} type='date' name='DateEnd' title='Окончание оказания услуг'\r\n                            onChange={this.changeData}\r\n                            onBlur={this.touched}\r\n                            validation={this.validationRequired} />\r\n                    </div>\r\n                </div>\r\n\r\n                <MyTextAreaKPP {...this.props} rows='3' name='DateText' title='Относительный период (не обязательно, для эксклюзивов)'\r\n                    onChange={this.changeData}\r\n                    onBlur={this.touched}\r\n                    validation={this.validationRequired} />\r\n                {/* <div className=\"form-group\">\r\n                    <label className='d-block'><h6>Срок оказания услуг по договору:</h6></label>\r\n                    <div className=\"form-group d-inline-block\">\r\n                        <label>Начало оказания услуг:</label>\r\n                        <input type='date' className=\"form-control\"\r\n                            value={this.props.temporaryTaskDO.DateStart} data-name='DateStart' onChange={this.changeData}\r\n                        ></input>\r\n                    </div>\r\n                    <div className=\"form-group d-inline-block ml-2\">\r\n                        <label>Окончание оказания услуг:</label>\r\n                        <input type='date' className=\"form-control\"\r\n                            value={this.props.temporaryTaskDO.DateEnd} data-name='DateEnd' onChange={this.changeData}\r\n                        ></input>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>Относительный период (не обязательно, для эксклюзивов):</label>\r\n                        <textarea rows='3' className=\"form-control\"\r\n                            value={this.props.temporaryTaskDO.DateText} data-name='DateText' onChange={this.changeData}\r\n                        ></textarea>\r\n                    </div>\r\n                </div> */}\r\n                <div className=\"form-group\">\r\n                    <label><h6>Код услуги/проекта</h6></label>\r\n                    <div className='row'>\r\n                        <div className='col-6'>\r\n                            <input type=\"text\" className=\"form-control\" placeholder='Поиск услуги'\r\n                                onKeyPress={this.filterServices}></ input>\r\n                        </div>\r\n                        <div className='col-6'>\r\n                            Выбранные услуги\r\n                    </div>\r\n                    </div>\r\n                    <div className={'row ' + style.heightrow}>\r\n                        <div className='col-6 h-100'>\r\n                            {/* <MySelectKPP {...this.props} size='5' name='PerActService' title=''\r\n                                onChange={null}\r\n                                onDoubleClick={this.addServicesListSelected}\r\n                            >\r\n                                {servicesList}\r\n                            </MySelectKPP> */}\r\n                            <select size='5' className=\"form-control h-100\" onDoubleClick={this.addServicesListSelected}>\r\n                                <option></option>\r\n                                {servicesList}\r\n                            </select>\r\n                        </div>\r\n                        <div className='col-6 h-100'>\r\n                            <div className='h-100 overflow-auto'>\r\n                                {selectedServices}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <button className='btn btn-light w-100' onClick={this.props.toggleAddServiceFormAC}>Запрос на добавление усдуги</button>\r\n                    {addServiceForm}\r\n                </div>\r\n\r\n                <MyTextAreaKPP {...this.props} addBtn={addBtn} name='SubjectContract' title='Предмет документа' rows=\"3\"\r\n                    onChange={this.changeData}\r\n                    onBlur={this.touched}\r\n                    validation={this.validationRequired} />\r\n                <MyTextAreaKPP {...this.props} name='AdditionalConditional' title='Дополнительные условия' rows=\"3\"\r\n                    onChange={this.changeData}\r\n                    onBlur={this.touched}\r\n                    validation={this.validationRequired} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Step3","import Step3 from \"./step3\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router\";\r\nimport { compose } from \"redux\";\r\nimport {\r\n    toggleAddServiceFormAC, getPeriodsAct, changeDataAC, getServices,\r\n    addServicesListSelectedAC, getEOSZ, deleteServicesListSelectedAC, defaultSubjectAC,getTask,touchedAC\r\n} from \"../../../redux/reducers/reducer_taskDO\";\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    //debugger;\r\n    return {\r\n        addServiceFormToggle: state.TaskDOForm.toggleForms.addServiceForm,\r\n        periodsActList: state.TaskDOForm.periodsActList,\r\n        servicesList: state.TaskDOForm.servicesList,\r\n        temporaryTaskDO: state.TaskDOForm.temporaryTaskDO,\r\n        servicesListSelected: state.TaskDOForm.servicesListSelected,\r\n        EOSZList: state.TaskDOForm.EOSZList,\r\n        errors: state.TaskDOForm.errors,\r\n        currentTeask: state.TaskDOForm.currentTeask\r\n    }\r\n}\r\n\r\nlet Step3Container = compose(\r\n    connect(mapStateToProps,\r\n        {\r\n            toggleAddServiceFormAC, getPeriodsAct, changeDataAC, getServices,\r\n            addServicesListSelectedAC, getEOSZ, deleteServicesListSelectedAC, defaultSubjectAC,getTask,touchedAC\r\n        }),\r\n    withRouter)\r\n    (Step3);\r\nexport default Step3Container","import React from 'react'\r\nimport { MyInputFileKPP } from \"../inputs/inputs\";\r\n\r\nclass Step4 extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.changeData = this.changeData.bind(this)\r\n        this.clearData = this.clearData.bind(this)\r\n    }\r\n    componentDidMount() {\r\n        if (this.props.temporaryTaskDO.TypeService) this.props.getSY(this.props.temporaryTaskDO.TypeService);\r\n        let urlIdTask = this.props.match.params.idtask;\r\n        if (urlIdTask &&\r\n            urlIdTask != this.props.currentTeask) this.props.getTask(urlIdTask)\r\n    }\r\n    clearData(e) {\r\n        e.preventDefault();\r\n        this.props.clearDataAC({ name: 'FileSU' })\r\n    }\r\n    selectedFiles(arr) {\r\n        if (!arr.length) return <></>\r\n        var newArr = [];\r\n        for (var i = 0; i < arr.length; i++) {\r\n            newArr.push(arr[i])\r\n            newArr[i].id = i\r\n        }\r\n        //console.log(newArr)\r\n        let selectedFilesSY = newArr.map(item =>\r\n            <p className='ml-2' key={item.id}>{item.name}</p>)\r\n        {/* <span className='finger'\r\n                data-id={item.id}\r\n                onClick={this.deleteServicesListSelected}>&#10060;</span> */}\r\n        return <div>\r\n            <h6 className='d-inline-block'>Выбранные файлы</h6>\r\n            <a className='ml-3' onClick={this.clearData} href='#'>&#10060;Очистить</a>\r\n            {selectedFilesSY}\r\n        </div>\r\n    }\r\n    changeData(e) {\r\n        /* const file = event.target.files[0];\r\n        let formData = new FormData();\r\n        formData.append('file', file);\r\n        //console.log(formData)\r\n        //Make a request to server and send formData */\r\n        //debugger;\r\n        this.props.changeDataAC({\r\n            name: e.target.getAttribute('data-name'),\r\n            data: e.target.files\r\n        })\r\n    }\r\n    validationRequired = (name) => {\r\n        //debugger\r\n        var find = !(this.props.errors.allInputs.findIndex(item => item == name) == -1)\r\n        //console.log(name+': '+find)\r\n        if(name=='FileSU'){\r\n            console.log(name+' touched: '+this.props.errors[name].touched)\r\n            console.log(name+' error: '+this.props.errors[name].error)\r\n        }\r\n        \r\n        return find && this.props.errors[name].touched && this.props.errors[name].error\r\n        \r\n    }\r\n    touched = (name) => {\r\n        //debugger\r\n        return () => this.props.touchedAC(name)\r\n    }\r\n\r\n    render() {\r\n        if (this.props.refSY[0].ref) {\r\n            var ref = (<div className=\"form-group\">\r\n                <label><h6>Шаблон СУ:</h6></label>\r\n                <a href={this.props.refSY[0].ref} className='btn btn-light d-block text-left' download>{this.props.refSY[0].name}</a>\r\n            </div>)\r\n        }\r\n        return (\r\n            <div>\r\n                <h5>Шаг.4 Файлы</h5>\r\n                <hr />\r\n                {ref}\r\n                <MyInputFileKPP {...this.props} title='Прикрепить существенные условия:' name='FileSU'\r\n                onChange={this.changeData}\r\n                onBlur={this.touched}\r\n                validation={this.validationRequired} />\r\n                <MyInputFileKPP {...this.props} title='Прикрепить расчет стоимости:' name='FilePrice'\r\n                onChange={this.changeData}\r\n                onBlur={this.touched}\r\n                validation={this.validationRequired} />\r\n                <MyInputFileKPP {...this.props} title='Прикрепить перечень правок по тексту договора:' name='FileEdit'\r\n                onChange={this.changeData}\r\n                onBlur={this.touched}\r\n                validation={this.validationRequired} />\r\n                <MyInputFileKPP {...this.props} title='Прикрепить приложение к договору:' name='FileApplication'\r\n                onChange={this.changeData}\r\n                onBlur={this.touched}\r\n                validation={this.validationRequired} />\r\n                <MyInputFileKPP {...this.props} title='Прикрепить протокол УС:' name='FileUS'\r\n                onChange={this.changeData}\r\n                onBlur={this.touched}\r\n                validation={this.validationRequired} />\r\n                <MyInputFileKPP {...this.props} title='Прикрепить прочие файлы:' name='FileOther'\r\n                onChange={this.changeData}\r\n                onBlur={this.touched}\r\n                validation={this.validationRequired} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Step4","import Step4 from \"./step4\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router\";\r\nimport { compose } from \"redux\";\r\nimport { getSY, changeDataAC, clearDataAC,getTask,touchedAC } from \"../../../redux/reducers/reducer_taskDO\";\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    //debugger;\r\n    return {\r\n        temporaryTaskDO: state.TaskDOForm.temporaryTaskDO,\r\n        refSY: state.TaskDOForm.refSY,\r\n        errors: state.TaskDOForm.errors,\r\n        currentTeask: state.TaskDOForm.currentTeask\r\n    }\r\n}\r\n\r\nlet Step4Container = compose(connect(mapStateToProps,\r\n    { getSY, changeDataAC, clearDataAC,getTask,touchedAC }),\r\n    withRouter\r\n)(Step4);\r\nexport default Step4Container","import React, { Component } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { changeDataAC,gotoWork,cancelTask } from \"../../../redux/reducers/reducer_taskDO\";\r\nimport { MyChekBoxKPP, MyTextAreaKPP, MyInputFileKPP } from \"../inputs/inputs\";\r\n\r\nclass AdminForm extends Component {\r\n    changeData(e) {\r\n        /* const file = event.target.files[0];\r\n        let formData = new FormData();\r\n        formData.append('file', file);\r\n        //console.log(formData)\r\n        //Make a request to server and send formData */\r\n        //debugger;\r\n        this.props.changeDataAC({\r\n            name: e.target.getAttribute('data-name'),\r\n            data: e.target.files\r\n        })\r\n    }\r\n    validationRequired = (name) => {\r\n        //debugger\r\n        var find = !(this.props.errors.allInputs.findIndex(item => item == name) == -1)\r\n        //console.log(name+': '+find)\r\n        if(name=='FileSU'){\r\n            console.log(name+' touched: '+this.props.errors[name].touched)\r\n            console.log(name+' error: '+this.props.errors[name].error)\r\n        }\r\n        \r\n        return find && this.props.errors[name].touched && this.props.errors[name].error\r\n        \r\n    }\r\n    touched = (name) => {\r\n        //debugger\r\n        return () => this.props.touchedAC(name)\r\n    }\r\n    changeData=(e)=> {\r\n        this.props.changeDataAC({\r\n            name: e.target.getAttribute('data-name'),\r\n            data: e.target.value\r\n        })\r\n    }\r\n    render() {\r\n        //console.log(this.props)\r\n        let users=this.props.listUsersPP.map(item=><option key={item.id} value={item.id}>{item.name}</option>)\r\n        return (\r\n            <div>\r\n                <div className='form-group'>\r\n                    <label><h6>Изменить автораp а задачи</h6></label>\r\n                    <select className=\"form-control\"\r\n                        data-name='IdAuthor' value={this.props.IdAuthor} onChange={this.changeData}>\r\n                        {users}\r\n                    </select>\r\n                </div>\r\n                <div className='form-group'>\r\n                    <label><h6>ID задачаи ПК</h6></label>\r\n                    <input className=\"form-control\"\r\n                        data-name='IDPK' value={this.props.IDPK} onChange={this.changeData} />\r\n                </div>\r\n                <MyInputFileKPP \r\n                {...this.props} \r\n                    title='Добавить файлы ДО:' \r\n                    name='aditionalFilesDO'\r\n                    onChange={this.changeData}\r\n                    onBlur={this.touched}\r\n                    validation={this.validationRequired}\r\n                />\r\n                <div>\r\n                    <button className='btn btn-primary w-100' onClick={this.props.gotoWork}>Направить в работу</button>\r\n                    <button className='btn btn-danger w-100 mt-2' onClick={this.props.cancelTask}>Отклонить</button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    //debugger;\r\n    return {\r\n        temporaryTaskDO: state.TaskDOForm.temporaryTaskDO,\r\n        listUsersPP: state.TaskDOForm.listUsersPP,\r\n        IdAuthor: state.TaskDOForm.temporaryTaskDO.IdAuthor,\r\n        errors: state.TaskDOForm.errors\r\n    }\r\n}\r\nexport default connect(mapStateToProps,{changeDataAC,gotoWork,cancelTask})(AdminForm);\r\n","import AdminForm from \"./adminForm\";\r\nimport { MyChekBoxKPP, MyTextAreaKPP } from \"../inputs/inputs\";\r\n\r\nfunction Step5(props) {\r\n    //debugger\r\n    switch (props.statusUser) {\r\n        case 'admin':\r\n            var btnGroup = <AdminForm />\r\n            break;\r\n        case 'managerDO':\r\n            break;\r\n        case 'manaregPP':\r\n            var btnGroup = <button className='btn btn-primary w-100' onClick={()=>{props.checkErrorsAC();props.sendDataAC()}}>Направить заявку</button>\r\n            break;\r\n    }\r\n    function changeData(e) {\r\n        props.changeDataAC({\r\n            name: e.target.getAttribute('data-name'),\r\n            data: e.target.value\r\n        })\r\n    }\r\n    function validationRequired(name) {\r\n        //debugger\r\n        var find = !(props.errors.allInputs.findIndex(item => item == name) == -1)\r\n        return find && props.errors[name].touched && props.errors[name].error\r\n    }\r\n    function touched(name) {\r\n        //debugger\r\n        return () => props.touchedAC(name)\r\n    }\r\n    //console.log(props);\r\n    let datdPropsChekBox = {\r\n        onBlur: touched,\r\n        validation: validationRequired,\r\n        values: [\r\n            { id: 1, name: 'Да' },\r\n            { id: 0, name: 'Нет' }\r\n        ],\r\n        onChange: changeData\r\n    }\r\n    let datdPropsTextArea = {\r\n        rows: '3',\r\n        onChange: changeData,\r\n        onBlur: touched,\r\n        validation: validationRequired,\r\n    }\r\n    return (\r\n        <div>\r\n            <h5>Шаг.5 Прочее</h5>\r\n            <hr />\r\n            <MyTextAreaKPP {...props} name='signerClient'\r\n                title='Подписант со стороны КА'\r\n                {...datdPropsTextArea} />\r\n            <MyTextAreaKPP {...props} name='ContactManagerGA'\r\n                title='Контакты со стороны исполнителя'\r\n                {...datdPropsTextArea} />\r\n            <MyTextAreaKPP {...props} name='ContactsCp'\r\n                title='Контакты со стороны заказчика'\r\n                {...datdPropsTextArea} />\r\n            <MyTextAreaKPP {...props} name='systemsClient'\r\n                title='К каким системам заказчика необходим доступ при оказании услуг'\r\n                {...datdPropsTextArea} />\r\n            <MyTextAreaKPP {...props} name='CommentCD'\r\n                title='Комментарий ДО'\r\n                {...datdPropsTextArea} />\r\n            <MyChekBoxKPP {...props}\r\n                title='Обработка ПДн'\r\n                name='PDNBool'\r\n                {...datdPropsChekBox} />\r\n            <MyChekBoxKPP {...props}\r\n                title='Наличие разовых услуг'\r\n                name='boxServiceBool'\r\n                {...datdPropsChekBox} />\r\n            <MyChekBoxKPP {...props}\r\n                title='Соисполнители для оказания услуг'\r\n                name='coExecutorBool'\r\n                {...datdPropsChekBox} />\r\n            <MyChekBoxKPP {...props}\r\n                title='РИД по результату оказания услуг'\r\n                name='RIDBool'\r\n                {...datdPropsChekBox} />\r\n            <MyChekBoxKPP {...props}\r\n                title='Начало оказания услуг ранее текущей даты'\r\n                name='startInPastBool'\r\n                {...datdPropsChekBox} />\r\n            <MyChekBoxKPP {...props}\r\n                title='Нахождение исполнителей на территотории заказчика'\r\n                name='worcClientAreaBool'\r\n                {...datdPropsChekBox} />\r\n            <MyChekBoxKPP {...props}\r\n                title='Передача заказчику помещения безвоздмездно по акту'\r\n                name='TransferAreaBool'\r\n                {...datdPropsChekBox} />\r\n            <MyChekBoxKPP {...props}\r\n                title='Передача заказчику оборудования для оказаиня услуг'\r\n                name='TransferToolsBool'\r\n                {...datdPropsChekBox} />\r\n            {btnGroup}\r\n        </div>\r\n    )\r\n\r\n}\r\nexport default Step5\r\n","import Step5 from \"./step5\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router\";\r\nimport { compose } from \"redux\";\r\nimport { checkErrorsAC,getTask,changeDataAC,touchedAC,sendDataAC } from \"../../../redux/reducers/reducer_taskDO\";\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    //debugger;\r\n    return {\r\n        currentTeask: state.TaskDOForm.currentTeask,\r\n        statusUser:state.TaskDOForm.statusUser,\r\n        temporaryTaskDO: state.TaskDOForm.temporaryTaskDO,\r\n        errors: state.TaskDOForm.errors\r\n    }\r\n}\r\n\r\nlet Step5Container = compose(\r\n    connect(mapStateToProps, { checkErrorsAC,getTask,changeDataAC,touchedAC,sendDataAC }),\r\n    withRouter)\r\n    (Step5);\r\nexport default Step5Container","import Step1Container from \"../step1/step1Container\";\r\nimport Step2Container from \"../step2/step2Container\";\r\nimport Step3Container from \"../step3/step3Container\";\r\nimport Step4Container from \"../step4/step4Container\";\r\nimport Step5Container from \"../step5/step5Container\";\r\n\r\n\r\n\r\nfunction AllSteps() {\r\n    return <div>\r\n        <Step1Container />\r\n        <Step2Container />\r\n        <Step3Container />\r\n        <Step4Container />\r\n        <Step5Container />\r\n    </div>\r\n}\r\n\r\nexport default AllSteps","import React, { Component } from 'react';\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nclass ListTask extends Component {\r\n    componentDidMount() {\r\n        this.props.getListTask()\r\n    }\r\n\r\n    ChangeDataFilter = (e) => {\r\n        this.props.ChangeDataFilterAC({\r\n            name: e.target.getAttribute('data-name'),\r\n            data: e.target.value\r\n        })\r\n    }\r\n    getListTask = (e) => {\r\n        if (e.key == 'Enter') {\r\n            this.props.getListTask(this.props.filterListTask)\r\n        }\r\n    }\r\n    rowFilter = (name) => <th scope=\"col\" className='align-top'>\r\n        <input type='text' className='w-100'\r\n            onKeyPress={this.getListTask}\r\n            onChange={this.ChangeDataFilter}\r\n            data-name={name} value={this.props.filterListTask[{name}]} />\r\n    </th>\r\n    render() {\r\n        //console.log(this.props)\r\n\r\n        let rows = this.props.listTasks.map(item => <tr key={item.idtask}>\r\n            <th scope=\"row\"><NavLink to={'/react/AddTaskDO/step1/'+item.idtask} onClick={this.props.resetErrorsAC}>{item.idtask}</NavLink></th>\r\n            <td>{item.dateTask}</td>\r\n            <td>{item.authorTask}</td>\r\n            <td>{item.statusTask}</td>\r\n            <td>{item.datelastiteration}</td>\r\n            <td>{item.idpk}</td>\r\n            <td>{item.managerDO}</td>\r\n            <td>{item.department}</td>\r\n            <td>{item.typedoc}</td>\r\n            <td>{item.GID}</td>\r\n            <td>{item.nameClient}</td>\r\n            <td>{item.subjectTask}</td>\r\n            <td>{item.comment}</td>\r\n        </tr>)\r\n\r\n\r\n        //console.log(rows)\r\n        return (\r\n            <div>\r\n                <table className=\"table table-sm\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th scope=\"col\" className='align-top'>ID задачи</th>\r\n                            <th scope=\"col\" className='align-top'>Дата заявки</th>\r\n                            <th scope=\"col\" className='align-top'>Автор заявки</th>\r\n                            <th scope=\"col\" className='align-top'>Статус заявки</th>\r\n                            <th scope=\"col\" className='align-top'>Дата обработки заявки<br />(в работы/отклонено)</th>\r\n                            <th scope=\"col\" className='align-top'>id ПК</th>\r\n                            <th scope=\"col\" className='align-top'>Ответственный ДО</th>\r\n                            <th scope=\"col\" className='align-top'>Департамент</th>\r\n                            <th scope=\"col\" className='align-top'>Вид договора</th>\r\n                            <th scope=\"col\" className='align-top'>GID</th>\r\n                            <th scope=\"col\" className='align-top'>Краткое наименование КА</th>\r\n                            <th scope=\"col\" className='align-top'>Предмет документа</th>\r\n                            <th scope=\"col\" className='align-top'>Комментарий ДО</th>\r\n                        </tr>\r\n                        <tr>\r\n                            {this.rowFilter('idtask')}\r\n                            {this.rowFilter('dateTask')}\r\n                            {this.rowFilter('authorTask')}\r\n                            {this.rowFilter('statusTask')}\r\n                            {this.rowFilter('datelastiteration')}\r\n                            {this.rowFilter('idpk')}\r\n                            {this.rowFilter('managerDO')}\r\n                            {this.rowFilter('department')}\r\n                            {this.rowFilter('typedoc')}\r\n                            {this.rowFilter('GID')}\r\n                            {this.rowFilter('nameClient')}\r\n                            {this.rowFilter('subjectTask')}\r\n                            {this.rowFilter('comment')}\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {rows}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default ListTask","import ListTask from \"./listTask\";\r\nimport { connect } from \"react-redux\";\r\nimport { getListTask,ChangeDataFilterAC,resetErrorsAC } from \"../../../redux/reducers/reducer_taskDO\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    //debugger;\r\n    return {\r\n        listTasks: state.TaskDOForm.listTasks,\r\n        filterListTask: state.TaskDOForm.filterListTask\r\n    }\r\n}\r\n\r\nlet ListTaskContainer = connect(mapStateToProps, \r\n    {getListTask,ChangeDataFilterAC,resetErrorsAC})(ListTask);\r\nexport default ListTaskContainer","import React, { Component } from 'react';\r\n\r\nclass ListServicesByGid extends Component {\r\n    componentDidMount() {\r\n        this.props.getListservicesByGid(this.props.MainCP[0]);\r\n    }\r\n    render() {\r\n        //console.log(this.props)\r\n        let rows = this.props.listServicesByGid.map(item=><tr key={item.idDocument}>\r\n            <th scope=\"row\">{item.idDocument}</th>\r\n            <td>{item.codeService}</td>\r\n            <td>{item.numDoc}</td>\r\n            <td>{item.statusDoc}</td>\r\n            <td>{item.dateBegeen}</td>\r\n            <td>{item.dateEnd}</td>\r\n        </tr>) \r\n        return (\r\n            <div>\r\n                <h5>Список услуг по контрагенту</h5>\r\n                <hr />\r\n                <table className=\"table table-sm\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th scope=\"col\">ID документа</th>\r\n                            <th scope=\"col\">Код услуги</th>\r\n                            <th scope=\"col\">№ договор</th>\r\n                            <th scope=\"col\">Статус договора</th>\r\n                            <th scope=\"col\">Дата начала действия</th>\r\n                            <th scope=\"col\">Дата окончания действия</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {rows}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ListServicesByGid;","import ListServicesByGid from \"./listServicesByGid\";\r\nimport { connect } from \"react-redux\";\r\nimport { getListservicesByGid } from \"../../../redux/reducers/reducer_taskDO\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    //debugger;\r\n    return { \r\n        listServicesByGid: state.TaskDOForm.listServicesByGid,\r\n        MainCP: state.TaskDOForm.temporaryTaskDO.MainCP\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, \r\n    {getListservicesByGid})(ListServicesByGid);","import React from 'react'\r\nimport { render } from 'react-dom'\r\nimport { Form, Field } from 'react-final-form'\r\n\r\nconst sleep = ms => new Promise(resolve => setTimeout(resolve, ms))\r\n\r\nconst onSubmit = async values => {\r\n    await sleep(300)\r\n    window.alert(JSON.stringify(values, 0, 2))\r\n}\r\n\r\nconst App = () => (\r\n    <div>\r\n        <h1>React Final Form Example</h1>\r\n        <h2>Password / Confirm Validation</h2>\r\n        <a\r\n            href=\"https://final-form.org/react\"\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n        >\r\n            Read Docs\r\n    </a>\r\n        <Form\r\n            onSubmit={onSubmit}\r\n            validate={values => {\r\n                const errors = {}\r\n                if (!values.username) {\r\n                    errors.username = 'Required'\r\n                }\r\n                if (!values.password) {\r\n                    errors.password = 'Required'\r\n                }\r\n                if (!values.confirm) {\r\n                    errors.confirm = 'Required'\r\n                } else if (values.confirm !== values.password) {\r\n                    errors.confirm = 'Must match'\r\n                }\r\n                return errors\r\n            }}\r\n            render={({ handleSubmit, form, submitting, pristine, values }) => (\r\n                <form onSubmit={handleSubmit}>\r\n                    <Field name=\"username\">\r\n                        {({ input, meta }) => (\r\n                            <div>\r\n                                <label>Username</label>\r\n                                <input {...input} type=\"text\" placeholder=\"Username\" />\r\n                                {meta.error && meta.touched && <span>{meta.error}</span>}\r\n                            </div>\r\n                        )}\r\n                    </Field>\r\n                    <Field name=\"password\">\r\n                        {({ input, meta }) => (\r\n                            <div>\r\n                                <label>Password</label>\r\n                                <input {...input} type=\"password\" placeholder=\"Password\" />\r\n                                {meta.error && meta.touched && <span>{meta.error}</span>}\r\n                            </div>\r\n                        )}\r\n                    </Field>\r\n                    <Field name=\"confirm\">\r\n                        {({ input, meta }) => (\r\n                            <div>\r\n                                <label>Confirm</label>\r\n                                <input {...input} type=\"password\" placeholder=\"Confirm\" />\r\n                                {meta.error && meta.touched && <span>{meta.error}</span>}\r\n                            </div>\r\n                        )}\r\n                    </Field>\r\n                    <div className=\"buttons\">\r\n                        <button type=\"submit\" disabled={submitting}>\r\n                            Submit\r\n            </button>\r\n                        <button\r\n                            type=\"button\"\r\n                            onClick={form.reset}\r\n                            disabled={submitting || pristine}\r\n                        >\r\n                            Reset\r\n            </button>\r\n                    </div>\r\n                    <pre>{JSON.stringify(values, 0, 2)}</pre>\r\n                </form>\r\n            )}\r\n        />\r\n    </div>\r\n)\r\n\r\nexport default App;","import React, { Component } from 'react'\r\nimport { render } from 'react-dom'\r\nimport { Form, Field } from 'react-final-form'\r\n\r\n\r\nconst onSubmit = values => {\r\n    //alert('hello'+JSON.stringify(values, 0, 2))\r\n    alert('hello')\r\n    console.log(values)\r\n}\r\n\r\nfunction MyInput(props) {\r\n    function getClassError(error, touched) {\r\n        return error && touched ? 'form-control is-invalid' : 'form-control'\r\n    }\r\n    return (\r\n        <div>\r\n            <input {...props.input} className={getClassError(props.meta.error, props.meta.touched)} />\r\n            <div className=\"invalid-feedback\">\r\n                {props.meta.error && props.meta.touched && props.meta.error}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction MyTextArea(props) {\r\n    function getClassError(error, touched) {\r\n        return error && touched ? 'form-control is-invalid' : 'form-control'\r\n    }\r\n    return (\r\n        <div>\r\n            <textarea {...props.input} rows={props.rows} className={getClassError(props.meta.error, props.meta.touched)} />\r\n            <div className=\"invalid-feedback\">\r\n                {props.meta.error && props.meta.touched && props.meta.error}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nfunction MySelect(props) {\r\n    function getClassError(error, touched) {\r\n        return error && touched ? 'form-control is-invalid' : 'form-control'\r\n    }\r\n    ///console.log(props)\r\n    return (\r\n        <div>\r\n            <select {...props.input} className={getClassError(props.meta.error, props.meta.touched)}>\r\n                {props.children}\r\n            </select>\r\n            <div className=\"invalid-feedback\">\r\n                {props.meta.error && props.meta.touched && props.meta.error}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nclass AddServiceForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    componentDidMount() {\r\n        /* this.props.getTypesContract()\r\n        this.props.getDepartments() */\r\n    }\r\n\r\n    saveNewService = () => this.props.saveNewService(this.props.addService)\r\n    onSubmit = values => {\r\n        this.props.saveNewService(values)\r\n    }\r\n    render() {\r\n        //console.log(this.props)\r\n        //let typesContract = this.props.typeContractsList.map(item => <option key={item.id} value={item.id}>{item.name}</option>)\r\n        //let departmentsList = this.props.departmentsList.map(item => <option key={item.id} value={item.id}>{item.name}</option>)\r\n        return (\r\n            <Form\r\n                onSubmit={this.onSubmit}\r\n                validate={values => {\r\n                    let requiredText = 'Обязательное поле для заполнения.';\r\n                    const errors = {}\r\n                    //console.log(Object.keys(values));\r\n                    let requireditems = [\r\n                        \"department\",\r\n                        \"groupService\",\r\n                        \"manager\",\r\n                        \"codeService\",\r\n                        \"nameService\",\r\n                        \"typeService\",\r\n                        \"nomenclatureGroup\",\r\n                        \"measurement\"\r\n                    ]\r\n                    requireditems.forEach(item => { if (!values[item]) errors[item] = requiredText })\r\n                    /*  if (!values.username) {\r\n                         errors.username = requiredText\r\n                     }\r\n                     if (!values.password) {\r\n                         errors.password = 'Required'\r\n                     }\r\n                     if (!values.confirm) {\r\n                         errors.confirm = 'Required'\r\n                     } else if (values.confirm !== values.password) {\r\n                         errors.confirm = 'Must match'\r\n                     } */\r\n                    return errors\r\n                }}\r\n                initialValues={{}}\r\n            >\r\n                <form>\r\n                    <div className=\"form-group\">\r\n                        <label><h6 className='text-body'>Подразделение, оказывающее услугу:</h6></label>\r\n                        <Field name=\"department\" component={MySelect}>\r\n                            <option value={null}></option>\r\n                            <option value=\"1\">hello1</option>\r\n                            <option value=\"2\">hello2</option>\r\n                            <option value=\"3\">hello3</option>\r\n                            <option value=\"4\">hello4</option>\r\n                        </Field>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label><h6 className='text-body'>Группа услуг:</h6></label>\r\n                        <Field name=\"groupService\" type='text' component={MyInput} />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label><h6 className='text-body'>Менеджер услуги:</h6></label>\r\n                        <Field name=\"manager\" type='text' component={MyInput} />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label><h6 className='text-body'>Код услуги/проекта:</h6></label>\r\n                        <Field name=\"codeService\" type='text' component={MyInput} />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label><h6 className='text-body'>Наименование услуги:</h6></label>\r\n                        <Field name=\"nameService\" rows=\"3\" component={MyTextArea} />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label><h6 className='text-body'>Вид договора:</h6></label>\r\n                        <Field name=\"typeService\" component={MySelect}>\r\n                            <option value={null}></option>\r\n                            <option value=\"1\">hello1</option>\r\n                            <option value=\"2\">hello2</option>\r\n                            <option value=\"3\">hello3</option>\r\n                            <option value=\"4\">hello4</option>\r\n                        </Field>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label><h6 className='text-body'>Номенклатурная группа:</h6></label>\r\n                        <Field name=\"nomenclatureGroup\" type='text' component={MyInput} />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label><h6 className='text-body'>Единица измерения услуги:</h6></label>\r\n                        <Field name=\"measurement\" type='text' component={MyInput} />\r\n                    </div>\r\n\r\n                </form>\r\n            </Form>\r\n        );\r\n    }\r\n}\r\n\r\nconst App = () => (\r\n    <div>\r\n        <h5>KPP</h5>\r\n        <Form\r\n            onSubmit={onSubmit}\r\n            validate={values => {\r\n                const errors = {}\r\n                if (!values.username) {\r\n                    errors.username = 'kpp'\r\n                }\r\n                if (!values.password) {\r\n                    errors.password = 'Required'\r\n                }\r\n                if (!values.confirm) {\r\n                    errors.confirm = 'Required'\r\n                } else if (values.confirm !== values.password) {\r\n                    errors.confirm = 'Must match'\r\n                }\r\n                return errors\r\n            }}\r\n            initialValues={{ username: 'larryKPP', password: 'hello' }}\r\n            render={({ handleSubmit, form, submitting, pristine, values }) => (\r\n                <form onSubmit={handleSubmit}>\r\n\r\n                    <Field name=\"username\">\r\n                        {({ input, meta }) => (\r\n                            <div>\r\n                                <label>Username</label>\r\n                                <input {...input} type=\"text\" placeholder=\"Username\" />\r\n                                {meta.error && meta.touched && <span>{meta.error}</span>}\r\n                            </div>\r\n                        )}\r\n                    </Field>\r\n                    <Field name=\"password\">\r\n                        {({ input, meta }) => (\r\n                            <div>\r\n                                <label>Password</label>\r\n                                <input {...input} type=\"password\" placeholder=\"Password\" />\r\n                                {meta.error && meta.touched && <span>{meta.error}</span>}\r\n                            </div>\r\n                        )}\r\n                    </Field>\r\n                    <Field name=\"confirm\">\r\n                        {({ input, meta }) => (\r\n                            <div>\r\n                                <label>Confirm</label>\r\n                                <input {...input} type=\"password\" placeholder=\"Confirm\" />\r\n                                {meta.error && meta.touched && <span>{meta.error}</span>}\r\n                            </div>\r\n                        )}\r\n                    </Field>\r\n                    <div className=\"buttons\">\r\n                        <button type=\"submit\" disabled={submitting}>\r\n                            Submit\r\n                    </button>\r\n                        <button\r\n                            type=\"button\"\r\n                            onClick={form.reset}\r\n                            disabled={submitting || pristine}\r\n                        >\r\n                            Reset\r\n                    </button>\r\n                    </div>\r\n                    <pre>{JSON.stringify(values, 0, 2)}</pre>\r\n\r\n                </form>\r\n            )}\r\n        />\r\n    </div>\r\n)\r\n\r\nexport default AddServiceForm;","import NavTaskContainer from \"./nav/navTaskContainer\"\r\nimport { Route } from 'react-router-dom';\r\nimport logo from '../../logo.svg';\r\nimport Step1Container from \"./step1/step1Container\";\r\nimport Step2Container from \"./step2/step2Container\";\r\nimport Step3Container from \"./step3/step3Container\";\r\nimport Step4Container from \"./step4/step4Container\";\r\nimport Step5Container from \"./step5/step5Container\";\r\nimport AllSteps from \"./allSteps/allSteps\";\r\nimport ListTaskContainer from \"./listTask/listTaskContainer\";\r\nimport React, { Component } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { getStatusUser } from \"../../redux/reducers/reducer_taskDO\";\r\nimport ListServicesByGid from \"./listServicesByGid/listServicesByGidContainer\";\r\nimport TestForm from \"./testForm/testForm\";\r\nimport TestForm2 from \"./testForm/testForm2\";\r\n\r\nclass AddTaskDoStart extends Component {\r\n    componentDidMount() {\r\n        this.props.getStatusUser();\r\n    }\r\n    \r\n    render() {\r\n        //console.log(this.props)\r\n        let listServicesByGid=this.props.TaskDOForm.statusUser=='admin'?<ListServicesByGid />:'';\r\n        return (\r\n            <div>\r\n                <Route path=\"/react/AddTaskDO/:step?/:idtask?\" render={() => <NavTaskContainer />} />\r\n                <img src={logo} className=\"App-logo float-right mb-2\" alt=\"logo\" />\r\n                <Route path=\"/react/AddTaskDO/step1/:idtask?\" render={() => <div><Step1Container />{listServicesByGid}</div>} />\r\n                <Route path=\"/react/AddTaskDO/step2/:idtask?\" render={() => <div><Step2Container />{listServicesByGid}</div>} />\r\n                <Route path=\"/react/AddTaskDO/step3/:idtask?\" render={() => <div><Step3Container />{listServicesByGid}</div>} />\r\n                <Route path=\"/react/AddTaskDO/step4/:idtask?\" render={() => <div><Step4Container />{listServicesByGid}</div>} />\r\n                <Route path=\"/react/AddTaskDO/step5/:idtask?\" render={() => <div><Step5Container />{listServicesByGid}</div>} />\r\n                <Route path=\"/react/AddTaskDO/allSteps/:idtask?\" render={() => <div><AllSteps />{listServicesByGid}</div>} />\r\n                <Route path=\"/react/AddTaskDO/listTask\" render={() => <ListTaskContainer />} />\r\n                <Route path=\"/react/AddTaskDO/testForm\" render={() => <TestForm />} />\r\n                <Route path=\"/react/AddTaskDO/testForm2\" render={() => <TestForm2 />} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    //debugger;\r\n    return { ...state }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, { getStatusUser })(AddTaskDoStart)","import logo from './logo.svg';\nimport './App.css';\nimport NavBar from \"./components/navTask/navTask\";\nimport { Route, NavLink } from 'react-router-dom';\nimport ContainerUpdateTask from \"./components/form/updateTask/containerUpdateTask\";\nimport ContainerAddTask from \"./components/form/addTask/containerAddTask\";\nimport ContainerAlerts from \"./components/tasksAlert/containerAlerts\";\nimport ContainerListTasks from \"./components/listTasks/containerListTasks\";\nimport TodoStart from \"./components/todoStart\";\nimport AddTaskDoStart from \"./components/addTaskDO/addTaskDoStart\";\n\nfunction App() {\n  return (\n\n    <div className='container-fluid'>\n      <Route path=\"/AddTaskInside\" render={() => <TodoStart />} />\n      <Route path=\"/react/AddTaskDO\" render={() => <AddTaskDoStart />} />\n      {/* <div className=\"row\">\n        <div className=\"col-2\">\n          <ul className=\"nav flex-column\">\n            <li className=\"nav-item\">\n              <NavLink to='/react/AddTaskDO' className=\"\">Заявка на договор</NavLink>\n            </li>\n            <li className=\"nav-item\">\n              <NavLink to='/AddTaskInside' className=\"\">Задача внутренняя</NavLink>\n            </li>\n          </ul>\n        </div>\n        <div className=\"col-10\">\n          <Route path=\"/AddTaskInside\" render={() => <TodoStart />} />\n          <Route path=\"/react/AddTaskDO\" render={() => <AddTaskDoStart />} />\n        </div>\n      </div> */}\n    </div>\n\n  );\n}\nexport default App;\n","const UPDATEDIRS = 'updateDirs'\r\n\r\nfunction directoryesReducer(state = {}, action) {\r\n    //debugger;\r\n    switch (action.type) {\r\n        case UPDATEDIRS:\r\n            var newState={\r\n                ...state,\r\n                dir_executors:[...action.data.dir_executors],\r\n                dir_tyteTasks:[...action.data.dir_tyteTasks]\r\n            };\r\n            return newState;\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\nexport default directoryesReducer;","import { applyMiddleware, combineReducers, createStore } from \"redux\";\r\nimport listTaskReducer from \"./reducers/reducer_ListTask\";\r\nimport directoryesReducer from \"./reducers/reducer_directorys\";\r\nimport TaskDOReducer from \"./reducers/reducer_taskDO\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport { reducer as formReducer } from 'redux-form'\r\n\r\nlet reducers = combineReducers({\r\n    arrTasks: listTaskReducer,\r\n    directoryes: directoryesReducer,\r\n    TaskDOForm: TaskDOReducer,\r\n    form: formReducer\r\n});\r\n\r\nlet store = createStore(reducers,applyMiddleware(thunkMiddleware));\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport store from \"./redux/redux_store\";\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter } from 'react-router-dom';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <Provider store={store}>\n        <App store={store.getState()} dispatch={store.dispatch.bind(store)} />\n      </Provider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n/* let rerenderEmtierTree = (store) => {\n  ReactDOM.render(\n    <React.StrictMode>\n      <BrowserRouter>\n        <Provider store={store}>\n          <App store={store.getState()} dispatch={store.dispatch.bind(store)} />\n        </Provider>\n      </BrowserRouter>\n    </React.StrictMode>,\n    document.getElementById('root')\n  );\n}\nrerenderEmtierTree(store);\n\nstore.subscribe(() => {\n  let state = store;\n  rerenderEmtierTree(state);\n}\n); */\n\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n//reportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"heightrow\":\"step3_heightrow__hFcaB\"};"],"sourceRoot":""}